{
  "contractName": "freelancer",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "scheduleID",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "valueReleased",
          "type": "uint256"
        }
      ],
      "name": "fundsReleased",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "clientAddress",
          "type": "address"
        }
      ],
      "name": "projectAccepted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "projectEnded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "shortCode",
          "type": "string"
        }
      ],
      "name": "scheduleAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "scheduleID",
          "type": "int256"
        }
      ],
      "name": "taskApproved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "scheduleID",
          "type": "int256"
        }
      ],
      "name": "taskFunded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "scheduleID",
          "type": "int256"
        }
      ],
      "name": "taskStarted",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "clientAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "endDate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "freelancerAddress",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "projectState",
      "outputs": [
        {
          "internalType": "enum freelancer.ProjectState",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "scheduleRegister",
      "outputs": [
        {
          "internalType": "string",
          "name": "shortCode",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "startDate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "endDate",
          "type": "uint256"
        },
        {
          "internalType": "enum freelancer.ScheduleState",
          "name": "scheduleState",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "startDate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "totalSchedules",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_shortCode",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "addSchedule",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_startDate",
          "type": "uint256"
        }
      ],
      "name": "acceptProject",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "int256",
          "name": "_scheduleID",
          "type": "int256"
        }
      ],
      "name": "fundTask",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "int256",
          "name": "_scheduleID",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "_startDate",
          "type": "uint256"
        }
      ],
      "name": "startTask",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "int256",
          "name": "_scheduleID",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "_endDate",
          "type": "uint256"
        }
      ],
      "name": "approveTask",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "int256",
          "name": "_scheduleID",
          "type": "int256"
        }
      ],
      "name": "releaseFunds",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_endDate",
          "type": "uint256"
        }
      ],
      "name": "endProject",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"scheduleID\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"valueReleased\",\"type\":\"uint256\"}],\"name\":\"fundsReleased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"clientAddress\",\"type\":\"address\"}],\"name\":\"projectAccepted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"projectEnded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"shortCode\",\"type\":\"string\"}],\"name\":\"scheduleAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"scheduleID\",\"type\":\"int256\"}],\"name\":\"taskApproved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"scheduleID\",\"type\":\"int256\"}],\"name\":\"taskFunded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"scheduleID\",\"type\":\"int256\"}],\"name\":\"taskStarted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_startDate\",\"type\":\"uint256\"}],\"name\":\"acceptProject\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_shortCode\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"addSchedule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"_scheduleID\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"_endDate\",\"type\":\"uint256\"}],\"name\":\"approveTask\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clientAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endDate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_endDate\",\"type\":\"uint256\"}],\"name\":\"endProject\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"freelancerAddress\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"_scheduleID\",\"type\":\"int256\"}],\"name\":\"fundTask\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"projectState\",\"outputs\":[{\"internalType\":\"enum freelancer.ProjectState\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"_scheduleID\",\"type\":\"int256\"}],\"name\":\"releaseFunds\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"scheduleRegister\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"shortCode\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endDate\",\"type\":\"uint256\"},{\"internalType\":\"enum freelancer.ScheduleState\",\"name\":\"scheduleState\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startDate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"_scheduleID\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"_startDate\",\"type\":\"uint256\"}],\"name\":\"startTask\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSchedules\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Freelancer.sol\":\"freelancer\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/Freelancer.sol\":{\"keccak256\":\"0xbdacf412d95fc5bd2a5d109416fa9c4b0c04bc11062277c42a1838bcf298969c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e21cc9052a9f2610b2768b34e086ac26219738238269b4694dbd1d8bc57b2cf\",\"dweb:/ipfs/QmTwDzZAVA5NBMugdMVLwLAGXLqFoLw7k88V5Gs4UydF6L\"]}},\"version\":1}",
  "bytecode": "0x60806040526000805534801561001457600080fd5b5033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600260146101000a81548160ff021916908360028111156100a2577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b0217905550611ce7806100b66000396000f3fe6080604052600436106100e85760003560e01c8063748807ab1161008a578063bab5691011610059578063bab56910146102af578063bb6fc950146102f1578063c24a0f8b1461030d578063fd1d5ea914610338576100e8565b8063748807ab1461020757806384bf66ac14610232578063965720af1461025b578063b92586c214610286576100e8565b806312065fe0116100c657806312065fe01461015f5780632c2ab5ea1461018a5780634570078f146101b5578063744bc369146101de576100e8565b8063054f84ed146100ed57806306a4e7cb146101095780630b97bc8614610134575b600080fd5b6101076004803603810190610102919061163d565b610361565b005b34801561011557600080fd5b5061011e6105cc565b60405161012b91906117f8565b60405180910390f35b34801561014057600080fd5b506101496105f2565b6040516101569190611903565b60405180910390f35b34801561016b57600080fd5b506101746105f8565b6040516101819190611903565b60405180910390f35b34801561019657600080fd5b5061019f610600565b6040516101ac91906117dd565b60405180910390f35b3480156101c157600080fd5b506101dc60048036038101906101d79190611666565b610626565b005b3480156101ea57600080fd5b5061020560048036038101906102009190611721565b610886565b005b34801561021357600080fd5b5061021c6109cb565b6040516102299190611813565b60405180910390f35b34801561023e57600080fd5b50610259600480360381019061025491906116a2565b6109de565b005b34801561026757600080fd5b50610270610c97565b60405161027d919061182e565b60405180910390f35b34801561029257600080fd5b506102ad60048036038101906102a89190611666565b610c9d565b005b3480156102bb57600080fd5b506102d660048036038101906102d1919061163d565b610efe565b6040516102e896959493929190611894565b60405180910390f35b61030b6004803603810190610306919061163d565b611057565b005b34801561031957600080fd5b50610322611333565b60405161032f9190611903565b60405180910390f35b34801561034457600080fd5b5061035f600480360381019061035a9190611721565b611339565b005b600180600281111561039c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600260149054906101000a900460ff1660028111156103e4577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b146103ee57600080fd5b8160006001600054610400919061199b565b82131580156104a15750806004811115610443577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6005600084815260200190815260200160002060050160009054906101000a900460ff16600481111561049f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b145b6104aa57600080fd5b8334806005600084815260200190815260200160002060020154146104ce57600080fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461052857600080fd5b60016005600088815260200190815260200160002060050160006101000a81548160ff02191690836004811115610588577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055507fd58e7b4972479e30bd65e34280dcda90802a617a803cb4b39764a2a30d3a8eae866040516105bc919061182e565b60405180910390a1505050505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60035481565b600047905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001806002811115610661577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600260149054906101000a900460ff1660028111156106a9577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b146106b357600080fd5b826001806000546106c4919061199b565b82131580156107655750806004811115610707577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6005600084815260200190815260200160002060050160009054906101000a900460ff166004811115610763577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b145b61076e57600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146107c857600080fd5b60026005600087815260200190815260200160002060050160006101000a81548160ff02191690836004811115610828577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055508360056000878152602001908152602001600020600301819055507fde2dc33fbe2a5b6bf5e0ed721d44dc14441c4eef2cf4975ce14fd7bc0549489c85604051610877919061182e565b60405180910390a15050505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061092f5750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b61093857600080fd5b6000471461094557600080fd5b60028060146101000a81548160ff02191690836002811115610990577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b0217905550806004819055507fbef1ef6470add1875c12e547d844894de0608f7d47527676863b44153090bfe260405160405180910390a150565b600260149054906101000a900460ff1681565b6000806002811115610a19577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600260149054906101000a900460ff166002811115610a61577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14610a6b57600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ac557600080fd5b610acd61149a565b84816000018190525083816020018190525060008160a001906004811115610b1e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b90816004811115610b58577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8152505082816040018181525050600081606001818152505060008160800181815250508060056000805481526020019081526020016000206000820151816000019080519060200190610bad929190611508565b506020820151816001019080519060200190610bca929190611508565b5060408201518160020155606082015181600301556080820151816004015560a08201518160050160006101000a81548160ff02191690836004811115610c3a577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b0217905550905050600080815480929190610c5490611b45565b91905055507ff29fdea51f7ec4cf45bbb7eb61e67fa64cf90101b5ea7415c5b02b69bac9c59485604051610c889190611872565b60405180910390a15050505050565b60005481565b6001806002811115610cd8577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600260149054906101000a900460ff166002811115610d20577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14610d2a57600080fd5b8260026001600054610d3c919061199b565b8213158015610ddd5750806004811115610d7f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6005600084815260200190815260200160002060050160009054906101000a900460ff166004811115610ddb577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b145b610de657600080fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610e4057600080fd5b60036005600087815260200190815260200160002060050160006101000a81548160ff02191690836004811115610ea0577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055508360056000878152602001908152602001600020600401819055507f38f72d6c98702d265aec82b55e4b637d84fa97622b2244cd84dca2f171a0cefc85604051610eef919061182e565b60405180910390a15050505050565b6005602052806000526040600020600091509050806000018054610f2190611b13565b80601f0160208091040260200160405190810160405280929190818152602001828054610f4d90611b13565b8015610f9a5780601f10610f6f57610100808354040283529160200191610f9a565b820191906000526020600020905b815481529060010190602001808311610f7d57829003601f168201915b505050505090806001018054610faf90611b13565b80601f0160208091040260200160405190810160405280929190818152602001828054610fdb90611b13565b80156110285780601f10610ffd57610100808354040283529160200191611028565b820191906000526020600020905b81548152906001019060200180831161100b57829003601f168201915b5050505050908060020154908060030154908060040154908060050160009054906101000a900460ff16905086565b6001806002811115611092577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600260149054906101000a900460ff1660028111156110da577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b146110e457600080fd5b81600360016000546110f6919061199b565b82131580156111975750806004811115611139577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6005600084815260200190815260200160002060050160009054906101000a900460ff166004811115611195577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b145b6111a057600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146111fa57600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc60056000878152602001908152602001600020600201549081150290604051600060405180830381858888f19350505050158015611278573d6000803e3d6000fd5b5060046005600086815260200190815260200160002060050160006101000a81548160ff021916908360048111156112d9577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055507fd73e163332c47993ba97b46887362ea1f01120cbc609242b41762901217bfd5d846005600087815260200190815260200160002060020154604051611325929190611849565b60405180910390a150505050565b60045481565b6000806002811115611374577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600260149054906101000a900460ff1660028111156113bc577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b146113c657600080fd5b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600260146101000a81548160ff02191690836002811115611453577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b0217905550816003819055507f01bc39c23d192137df337abb0c6fe3f63a86ead52f73452ca64136a5dfd7ff433360405161148e91906117dd565b60405180910390a15050565b6040518060c00160405280606081526020016060815260200160008152602001600081526020016000815260200160006004811115611502577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81525090565b82805461151490611b13565b90600052602060002090601f016020900481019282611536576000855561157d565b82601f1061154f57805160ff191683800117855561157d565b8280016001018555821561157d579182015b8281111561157c578251825591602001919060010190611561565b5b50905061158a919061158e565b5090565b5b808211156115a757600081600090555060010161158f565b5090565b60006115be6115b98461194f565b61191e565b9050828152602081018484840111156115d657600080fd5b6115e1848285611ad1565b509392505050565b6000813590506115f881611c83565b92915050565b600082601f83011261160f57600080fd5b813561161f8482602086016115ab565b91505092915050565b60008135905061163781611c9a565b92915050565b60006020828403121561164f57600080fd5b600061165d848285016115e9565b91505092915050565b6000806040838503121561167957600080fd5b6000611687858286016115e9565b925050602061169885828601611628565b9150509250929050565b6000806000606084860312156116b757600080fd5b600084013567ffffffffffffffff8111156116d157600080fd5b6116dd868287016115fe565b935050602084013567ffffffffffffffff8111156116fa57600080fd5b611706868287016115fe565b925050604061171786828701611628565b9150509250925092565b60006020828403121561173357600080fd5b600061174184828501611628565b91505092915050565b61175381611a41565b82525050565b61176281611a2f565b82525050565b61177181611aad565b82525050565b61178081611abf565b82525050565b61178f81611a79565b82525050565b60006117a08261197f565b6117aa818561198a565b93506117ba818560208601611ae0565b6117c381611c4a565b840191505092915050565b6117d781611aa3565b82525050565b60006020820190506117f26000830184611759565b92915050565b600060208201905061180d600083018461174a565b92915050565b60006020820190506118286000830184611768565b92915050565b60006020820190506118436000830184611786565b92915050565b600060408201905061185e6000830185611786565b61186b60208301846117ce565b9392505050565b6000602082019050818103600083015261188c8184611795565b905092915050565b600060c08201905081810360008301526118ae8189611795565b905081810360208301526118c28188611795565b90506118d160408301876117ce565b6118de60608301866117ce565b6118eb60808301856117ce565b6118f860a0830184611777565b979650505050505050565b600060208201905061191860008301846117ce565b92915050565b6000604051905081810181811067ffffffffffffffff8211171561194557611944611c1b565b5b8060405250919050565b600067ffffffffffffffff82111561196a57611969611c1b565b5b601f19601f8301169050602081019050919050565b600081519050919050565b600082825260208201905092915050565b60006119a682611a79565b91506119b183611a79565b9250827f8000000000000000000000000000000000000000000000000000000000000000018212600084121516156119ec576119eb611b8e565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff018213600084121615611a2457611a23611b8e565b5b828203905092915050565b6000611a3a82611a83565b9050919050565b6000611a4c82611a83565b9050919050565b6000819050611a6182611c5b565b919050565b6000819050611a7482611c6f565b919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000611ab882611a53565b9050919050565b6000611aca82611a66565b9050919050565b82818337600083830152505050565b60005b83811015611afe578082015181840152602081019050611ae3565b83811115611b0d576000848401525b50505050565b60006002820490506001821680611b2b57607f821691505b60208210811415611b3f57611b3e611bec565b5b50919050565b6000611b5082611a79565b91507f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611b8357611b82611b8e565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b60038110611c6c57611c6b611bbd565b5b50565b60058110611c8057611c7f611bbd565b5b50565b611c8c81611a79565b8114611c9757600080fd5b50565b611ca381611aa3565b8114611cae57600080fd5b5056fea26469706673582212204be79c3834e160aa82e89b769c728c8e5ecbe72f4f7a35d6ee7d3a1648f6331064736f6c63430008000033",
  "deployedBytecode": "0x6080604052600436106100e85760003560e01c8063748807ab1161008a578063bab5691011610059578063bab56910146102af578063bb6fc950146102f1578063c24a0f8b1461030d578063fd1d5ea914610338576100e8565b8063748807ab1461020757806384bf66ac14610232578063965720af1461025b578063b92586c214610286576100e8565b806312065fe0116100c657806312065fe01461015f5780632c2ab5ea1461018a5780634570078f146101b5578063744bc369146101de576100e8565b8063054f84ed146100ed57806306a4e7cb146101095780630b97bc8614610134575b600080fd5b6101076004803603810190610102919061163d565b610361565b005b34801561011557600080fd5b5061011e6105cc565b60405161012b91906117f8565b60405180910390f35b34801561014057600080fd5b506101496105f2565b6040516101569190611903565b60405180910390f35b34801561016b57600080fd5b506101746105f8565b6040516101819190611903565b60405180910390f35b34801561019657600080fd5b5061019f610600565b6040516101ac91906117dd565b60405180910390f35b3480156101c157600080fd5b506101dc60048036038101906101d79190611666565b610626565b005b3480156101ea57600080fd5b5061020560048036038101906102009190611721565b610886565b005b34801561021357600080fd5b5061021c6109cb565b6040516102299190611813565b60405180910390f35b34801561023e57600080fd5b50610259600480360381019061025491906116a2565b6109de565b005b34801561026757600080fd5b50610270610c97565b60405161027d919061182e565b60405180910390f35b34801561029257600080fd5b506102ad60048036038101906102a89190611666565b610c9d565b005b3480156102bb57600080fd5b506102d660048036038101906102d1919061163d565b610efe565b6040516102e896959493929190611894565b60405180910390f35b61030b6004803603810190610306919061163d565b611057565b005b34801561031957600080fd5b50610322611333565b60405161032f9190611903565b60405180910390f35b34801561034457600080fd5b5061035f600480360381019061035a9190611721565b611339565b005b600180600281111561039c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600260149054906101000a900460ff1660028111156103e4577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b146103ee57600080fd5b8160006001600054610400919061199b565b82131580156104a15750806004811115610443577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6005600084815260200190815260200160002060050160009054906101000a900460ff16600481111561049f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b145b6104aa57600080fd5b8334806005600084815260200190815260200160002060020154146104ce57600080fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461052857600080fd5b60016005600088815260200190815260200160002060050160006101000a81548160ff02191690836004811115610588577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055507fd58e7b4972479e30bd65e34280dcda90802a617a803cb4b39764a2a30d3a8eae866040516105bc919061182e565b60405180910390a1505050505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60035481565b600047905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001806002811115610661577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600260149054906101000a900460ff1660028111156106a9577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b146106b357600080fd5b826001806000546106c4919061199b565b82131580156107655750806004811115610707577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6005600084815260200190815260200160002060050160009054906101000a900460ff166004811115610763577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b145b61076e57600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146107c857600080fd5b60026005600087815260200190815260200160002060050160006101000a81548160ff02191690836004811115610828577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055508360056000878152602001908152602001600020600301819055507fde2dc33fbe2a5b6bf5e0ed721d44dc14441c4eef2cf4975ce14fd7bc0549489c85604051610877919061182e565b60405180910390a15050505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061092f5750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b61093857600080fd5b6000471461094557600080fd5b60028060146101000a81548160ff02191690836002811115610990577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b0217905550806004819055507fbef1ef6470add1875c12e547d844894de0608f7d47527676863b44153090bfe260405160405180910390a150565b600260149054906101000a900460ff1681565b6000806002811115610a19577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600260149054906101000a900460ff166002811115610a61577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14610a6b57600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ac557600080fd5b610acd61149a565b84816000018190525083816020018190525060008160a001906004811115610b1e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b90816004811115610b58577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8152505082816040018181525050600081606001818152505060008160800181815250508060056000805481526020019081526020016000206000820151816000019080519060200190610bad929190611508565b506020820151816001019080519060200190610bca929190611508565b5060408201518160020155606082015181600301556080820151816004015560a08201518160050160006101000a81548160ff02191690836004811115610c3a577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b0217905550905050600080815480929190610c5490611b45565b91905055507ff29fdea51f7ec4cf45bbb7eb61e67fa64cf90101b5ea7415c5b02b69bac9c59485604051610c889190611872565b60405180910390a15050505050565b60005481565b6001806002811115610cd8577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600260149054906101000a900460ff166002811115610d20577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14610d2a57600080fd5b8260026001600054610d3c919061199b565b8213158015610ddd5750806004811115610d7f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6005600084815260200190815260200160002060050160009054906101000a900460ff166004811115610ddb577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b145b610de657600080fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610e4057600080fd5b60036005600087815260200190815260200160002060050160006101000a81548160ff02191690836004811115610ea0577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055508360056000878152602001908152602001600020600401819055507f38f72d6c98702d265aec82b55e4b637d84fa97622b2244cd84dca2f171a0cefc85604051610eef919061182e565b60405180910390a15050505050565b6005602052806000526040600020600091509050806000018054610f2190611b13565b80601f0160208091040260200160405190810160405280929190818152602001828054610f4d90611b13565b8015610f9a5780601f10610f6f57610100808354040283529160200191610f9a565b820191906000526020600020905b815481529060010190602001808311610f7d57829003601f168201915b505050505090806001018054610faf90611b13565b80601f0160208091040260200160405190810160405280929190818152602001828054610fdb90611b13565b80156110285780601f10610ffd57610100808354040283529160200191611028565b820191906000526020600020905b81548152906001019060200180831161100b57829003601f168201915b5050505050908060020154908060030154908060040154908060050160009054906101000a900460ff16905086565b6001806002811115611092577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600260149054906101000a900460ff1660028111156110da577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b146110e457600080fd5b81600360016000546110f6919061199b565b82131580156111975750806004811115611139577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6005600084815260200190815260200160002060050160009054906101000a900460ff166004811115611195577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b145b6111a057600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146111fa57600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc60056000878152602001908152602001600020600201549081150290604051600060405180830381858888f19350505050158015611278573d6000803e3d6000fd5b5060046005600086815260200190815260200160002060050160006101000a81548160ff021916908360048111156112d9577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055507fd73e163332c47993ba97b46887362ea1f01120cbc609242b41762901217bfd5d846005600087815260200190815260200160002060020154604051611325929190611849565b60405180910390a150505050565b60045481565b6000806002811115611374577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600260149054906101000a900460ff1660028111156113bc577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b146113c657600080fd5b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600260146101000a81548160ff02191690836002811115611453577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b0217905550816003819055507f01bc39c23d192137df337abb0c6fe3f63a86ead52f73452ca64136a5dfd7ff433360405161148e91906117dd565b60405180910390a15050565b6040518060c00160405280606081526020016060815260200160008152602001600081526020016000815260200160006004811115611502577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81525090565b82805461151490611b13565b90600052602060002090601f016020900481019282611536576000855561157d565b82601f1061154f57805160ff191683800117855561157d565b8280016001018555821561157d579182015b8281111561157c578251825591602001919060010190611561565b5b50905061158a919061158e565b5090565b5b808211156115a757600081600090555060010161158f565b5090565b60006115be6115b98461194f565b61191e565b9050828152602081018484840111156115d657600080fd5b6115e1848285611ad1565b509392505050565b6000813590506115f881611c83565b92915050565b600082601f83011261160f57600080fd5b813561161f8482602086016115ab565b91505092915050565b60008135905061163781611c9a565b92915050565b60006020828403121561164f57600080fd5b600061165d848285016115e9565b91505092915050565b6000806040838503121561167957600080fd5b6000611687858286016115e9565b925050602061169885828601611628565b9150509250929050565b6000806000606084860312156116b757600080fd5b600084013567ffffffffffffffff8111156116d157600080fd5b6116dd868287016115fe565b935050602084013567ffffffffffffffff8111156116fa57600080fd5b611706868287016115fe565b925050604061171786828701611628565b9150509250925092565b60006020828403121561173357600080fd5b600061174184828501611628565b91505092915050565b61175381611a41565b82525050565b61176281611a2f565b82525050565b61177181611aad565b82525050565b61178081611abf565b82525050565b61178f81611a79565b82525050565b60006117a08261197f565b6117aa818561198a565b93506117ba818560208601611ae0565b6117c381611c4a565b840191505092915050565b6117d781611aa3565b82525050565b60006020820190506117f26000830184611759565b92915050565b600060208201905061180d600083018461174a565b92915050565b60006020820190506118286000830184611768565b92915050565b60006020820190506118436000830184611786565b92915050565b600060408201905061185e6000830185611786565b61186b60208301846117ce565b9392505050565b6000602082019050818103600083015261188c8184611795565b905092915050565b600060c08201905081810360008301526118ae8189611795565b905081810360208301526118c28188611795565b90506118d160408301876117ce565b6118de60608301866117ce565b6118eb60808301856117ce565b6118f860a0830184611777565b979650505050505050565b600060208201905061191860008301846117ce565b92915050565b6000604051905081810181811067ffffffffffffffff8211171561194557611944611c1b565b5b8060405250919050565b600067ffffffffffffffff82111561196a57611969611c1b565b5b601f19601f8301169050602081019050919050565b600081519050919050565b600082825260208201905092915050565b60006119a682611a79565b91506119b183611a79565b9250827f8000000000000000000000000000000000000000000000000000000000000000018212600084121516156119ec576119eb611b8e565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff018213600084121615611a2457611a23611b8e565b5b828203905092915050565b6000611a3a82611a83565b9050919050565b6000611a4c82611a83565b9050919050565b6000819050611a6182611c5b565b919050565b6000819050611a7482611c6f565b919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000611ab882611a53565b9050919050565b6000611aca82611a66565b9050919050565b82818337600083830152505050565b60005b83811015611afe578082015181840152602081019050611ae3565b83811115611b0d576000848401525b50505050565b60006002820490506001821680611b2b57607f821691505b60208210811415611b3f57611b3e611bec565b5b50919050565b6000611b5082611a79565b91507f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611b8357611b82611b8e565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b60038110611c6c57611c6b611bbd565b5b50565b60058110611c8057611c7f611bbd565b5b50565b611c8c81611a79565b8114611c9757600080fd5b50565b611ca381611aa3565b8114611cae57600080fd5b5056fea26469706673582212204be79c3834e160aa82e89b769c728c8e5ecbe72f4f7a35d6ee7d3a1648f6331064736f6c63430008000033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:11644:2",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "91:260:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "101:74:2",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "167:6:2"
                          }
                        ],
                        "functionName": {
                          "name": "array_allocation_size_t_string_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "125:41:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "125:49:2"
                      }
                    ],
                    "functionName": {
                      "name": "allocateMemory",
                      "nodeType": "YulIdentifier",
                      "src": "110:14:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "110:65:2"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "101:5:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "191:5:2"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "198:6:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "184:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "184:21:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "184:21:2"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "214:27:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "229:5:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "236:4:2",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "225:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "225:16:2"
                  },
                  "variables": [
                    {
                      "name": "dst",
                      "nodeType": "YulTypedName",
                      "src": "218:3:2",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "279:16:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "288:1:2",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "291:1:2",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "281:6:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "281:12:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "281:12:2"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "src",
                            "nodeType": "YulIdentifier",
                            "src": "260:3:2"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "265:6:2"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "256:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "256:16:2"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "274:3:2"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "253:2:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "253:25:2"
                  },
                  "nodeType": "YulIf",
                  "src": "250:2:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "328:3:2"
                      },
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "333:3:2"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "338:6:2"
                      }
                    ],
                    "functionName": {
                      "name": "copy_calldata_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "304:23:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "304:41:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "304:41:2"
                }
              ]
            },
            "name": "abi_decode_available_length_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "64:3:2",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "69:6:2",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "77:3:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "85:5:2",
                "type": ""
              }
            ],
            "src": "7:344:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "408:86:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "418:29:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "440:6:2"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "427:12:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "427:20:2"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "418:5:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "482:5:2"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_int256",
                      "nodeType": "YulIdentifier",
                      "src": "456:25:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "456:32:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "456:32:2"
                }
              ]
            },
            "name": "abi_decode_t_int256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "386:6:2",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "394:3:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "402:5:2",
                "type": ""
              }
            ],
            "src": "357:137:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "576:211:2",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "625:16:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "634:1:2",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "637:1:2",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "627:6:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "627:12:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "627:12:2"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "604:6:2"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "612:4:2",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "600:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "600:17:2"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "619:3:2"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "596:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "596:27:2"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "589:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "589:35:2"
                  },
                  "nodeType": "YulIf",
                  "src": "586:2:2"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "650:34:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "677:6:2"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "664:12:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "664:20:2"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "654:6:2",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "693:88:2",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "754:6:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "762:4:2",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "750:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "750:17:2"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "769:6:2"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "777:3:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_available_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "702:47:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "702:79:2"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "693:5:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "554:6:2",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "562:3:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "570:5:2",
                "type": ""
              }
            ],
            "src": "514:273:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "845:87:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "855:29:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "877:6:2"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "864:12:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "864:20:2"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "855:5:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "920:5:2"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "893:26:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "893:33:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "893:33:2"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "823:6:2",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "831:3:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "839:5:2",
                "type": ""
              }
            ],
            "src": "793:139:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1003:195:2",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1049:16:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1058:1:2",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1061:1:2",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1051:6:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1051:12:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1051:12:2"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1024:7:2"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1033:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1020:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1020:23:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1045:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1016:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1016:32:2"
                  },
                  "nodeType": "YulIf",
                  "src": "1013:2:2"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1075:116:2",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1090:15:2",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1104:1:2",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1094:6:2",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1119:62:2",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1153:9:2"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1164:6:2"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1149:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1149:22:2"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1173:7:2"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_int256",
                          "nodeType": "YulIdentifier",
                          "src": "1129:19:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1129:52:2"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1119:6:2"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_int256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "973:9:2",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "984:7:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "996:6:2",
                "type": ""
              }
            ],
            "src": "938:260:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1286:323:2",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1332:16:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1341:1:2",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1344:1:2",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1334:6:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1334:12:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1334:12:2"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1307:7:2"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1316:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1303:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1303:23:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1328:2:2",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1299:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1299:32:2"
                  },
                  "nodeType": "YulIf",
                  "src": "1296:2:2"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1358:116:2",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1373:15:2",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1387:1:2",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1377:6:2",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1402:62:2",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1436:9:2"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1447:6:2"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1432:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1432:22:2"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1456:7:2"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_int256",
                          "nodeType": "YulIdentifier",
                          "src": "1412:19:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1412:52:2"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1402:6:2"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1484:118:2",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1499:16:2",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1513:2:2",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1503:6:2",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1529:63:2",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1564:9:2"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1575:6:2"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1560:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1560:22:2"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1584:7:2"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1539:20:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1539:53:2"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1529:6:2"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_int256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1248:9:2",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1259:7:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1271:6:2",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1279:6:2",
                "type": ""
              }
            ],
            "src": "1204:405:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1735:658:2",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1781:16:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1790:1:2",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1793:1:2",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1783:6:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1783:12:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1783:12:2"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1756:7:2"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1765:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1752:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1752:23:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1777:2:2",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1748:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1748:32:2"
                  },
                  "nodeType": "YulIf",
                  "src": "1745:2:2"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1807:220:2",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1822:45:2",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1853:9:2"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1864:1:2",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1849:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1849:17:2"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "1836:12:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1836:31:2"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1826:6:2",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1914:16:2",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1923:1:2",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1926:1:2",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1916:6:2"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1916:12:2"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1916:12:2"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1886:6:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1894:18:2",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1883:2:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1883:30:2"
                      },
                      "nodeType": "YulIf",
                      "src": "1880:2:2"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1944:73:2",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1989:9:2"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2000:6:2"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1985:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1985:22:2"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2009:7:2"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_string_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "1954:30:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1954:63:2"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1944:6:2"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2037:221:2",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2052:46:2",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2083:9:2"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2094:2:2",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2079:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2079:18:2"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "2066:12:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2066:32:2"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2056:6:2",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2145:16:2",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2154:1:2",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2157:1:2",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "2147:6:2"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2147:12:2"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "2147:12:2"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "2117:6:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2125:18:2",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "2114:2:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2114:30:2"
                      },
                      "nodeType": "YulIf",
                      "src": "2111:2:2"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2175:73:2",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2220:9:2"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2231:6:2"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2216:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2216:22:2"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2240:7:2"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_string_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "2185:30:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2185:63:2"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "2175:6:2"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2268:118:2",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2283:16:2",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2297:2:2",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2287:6:2",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2313:63:2",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2348:9:2"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2359:6:2"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2344:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2344:22:2"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2368:7:2"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2323:20:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2323:53:2"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "2313:6:2"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1689:9:2",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1700:7:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1712:6:2",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1720:6:2",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1728:6:2",
                "type": ""
              }
            ],
            "src": "1615:778:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2465:196:2",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2511:16:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2520:1:2",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2523:1:2",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2513:6:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2513:12:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2513:12:2"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2486:7:2"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2495:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2482:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2482:23:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2507:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2478:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2478:32:2"
                  },
                  "nodeType": "YulIf",
                  "src": "2475:2:2"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2537:117:2",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2552:15:2",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2566:1:2",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2556:6:2",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2581:63:2",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2616:9:2"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2627:6:2"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2612:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2612:22:2"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2636:7:2"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2591:20:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2591:53:2"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2581:6:2"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2435:9:2",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2446:7:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2458:6:2",
                "type": ""
              }
            ],
            "src": "2399:262:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2748:61:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2765:3:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2796:5:2"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address_payable",
                          "nodeType": "YulIdentifier",
                          "src": "2770:25:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2770:32:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2758:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2758:45:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2758:45:2"
                }
              ]
            },
            "name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2736:5:2",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2743:3:2",
                "type": ""
              }
            ],
            "src": "2667:142:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2880:53:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2897:3:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2920:5:2"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2902:17:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2902:24:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2890:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2890:37:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2890:37:2"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2868:5:2",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2875:3:2",
                "type": ""
              }
            ],
            "src": "2815:118:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3017:79:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3034:3:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3083:5:2"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_enum$_ProjectState_$11_to_t_uint8",
                          "nodeType": "YulIdentifier",
                          "src": "3039:43:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3039:50:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3027:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3027:63:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3027:63:2"
                }
              ]
            },
            "name": "abi_encode_t_enum$_ProjectState_$11_to_t_uint8_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3005:5:2",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3012:3:2",
                "type": ""
              }
            ],
            "src": "2939:157:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3180:79:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3197:3:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3246:5:2"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_enum$_ScheduleState_$7_to_t_uint8",
                          "nodeType": "YulIdentifier",
                          "src": "3202:43:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3202:50:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3190:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3190:63:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3190:63:2"
                }
              ]
            },
            "name": "abi_encode_t_enum$_ScheduleState_$7_to_t_uint8_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3168:5:2",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3175:3:2",
                "type": ""
              }
            ],
            "src": "3102:157:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3328:52:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3345:3:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3367:5:2"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_int256",
                          "nodeType": "YulIdentifier",
                          "src": "3350:16:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3350:23:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3338:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3338:36:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3338:36:2"
                }
              ]
            },
            "name": "abi_encode_t_int256_to_t_int256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3316:5:2",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3323:3:2",
                "type": ""
              }
            ],
            "src": "3265:115:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3478:272:2",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3488:53:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3535:5:2"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "3502:32:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3502:39:2"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "3492:6:2",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3550:78:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3616:3:2"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3621:6:2"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3557:58:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3557:71:2"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3550:3:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3663:5:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3670:4:2",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3659:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3659:16:2"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3677:3:2"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3682:6:2"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "3637:21:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3637:52:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3637:52:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3698:46:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3709:3:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "3736:6:2"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "3714:21:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3714:29:2"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3705:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3705:39:2"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3698:3:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3459:5:2",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3466:3:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3474:3:2",
                "type": ""
              }
            ],
            "src": "3386:364:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3821:53:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3838:3:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3861:5:2"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "3843:17:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3843:24:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3831:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3831:37:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3831:37:2"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3809:5:2",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3816:3:2",
                "type": ""
              }
            ],
            "src": "3756:118:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3978:124:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3988:26:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4000:9:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4011:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3996:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3996:18:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3988:4:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4068:6:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4081:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4092:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4077:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4077:17:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4024:43:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4024:71:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4024:71:2"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3950:9:2",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3962:6:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3973:4:2",
                "type": ""
              }
            ],
            "src": "3880:222:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4222:140:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4232:26:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4244:9:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4255:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4240:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4240:18:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4232:4:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4328:6:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4341:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4352:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4337:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4337:17:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4268:59:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4268:87:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4268:87:2"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4194:9:2",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4206:6:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4217:4:2",
                "type": ""
              }
            ],
            "src": "4108:254:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4479:137:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4489:26:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4501:9:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4512:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4497:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4497:18:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4489:4:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4582:6:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4595:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4606:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4591:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4591:17:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_enum$_ProjectState_$11_to_t_uint8_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4525:56:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4525:84:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4525:84:2"
                }
              ]
            },
            "name": "abi_encode_tuple_t_enum$_ProjectState_$11__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4451:9:2",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4463:6:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4474:4:2",
                "type": ""
              }
            ],
            "src": "4368:248:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4718:122:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4728:26:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4740:9:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4751:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4736:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4736:18:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4728:4:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4806:6:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4819:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4830:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4815:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4815:17:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_int256_to_t_int256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4764:41:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4764:69:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4764:69:2"
                }
              ]
            },
            "name": "abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4690:9:2",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4702:6:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4713:4:2",
                "type": ""
              }
            ],
            "src": "4622:218:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4970:204:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4980:26:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4992:9:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5003:2:2",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4988:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4988:18:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4980:4:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5058:6:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5071:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5082:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5067:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5067:17:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_int256_to_t_int256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5016:41:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5016:69:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5016:69:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "5139:6:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5152:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5163:2:2",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5148:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5148:18:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5095:43:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5095:72:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5095:72:2"
                }
              ]
            },
            "name": "abi_encode_tuple_t_int256_t_uint256__to_t_int256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4934:9:2",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4946:6:2",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4954:6:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4965:4:2",
                "type": ""
              }
            ],
            "src": "4846:328:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5298:195:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5308:26:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5320:9:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5331:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5316:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5316:18:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5308:4:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5355:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5366:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5351:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5351:17:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "5374:4:2"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5380:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5370:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5370:20:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5344:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5344:47:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5344:47:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5400:86:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5472:6:2"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "5481:4:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5408:63:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5408:78:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5400:4:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5270:9:2",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5282:6:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5293:4:2",
                "type": ""
              }
            ],
            "src": "5180:313:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5790:692:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5800:27:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5812:9:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5823:3:2",
                        "type": "",
                        "value": "192"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5808:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5808:19:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5800:4:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5848:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5859:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5844:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5844:17:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "5867:4:2"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5873:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5863:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5863:20:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5837:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5837:47:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5837:47:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5893:86:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5965:6:2"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "5974:4:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5901:63:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5901:78:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5893:4:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6000:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6011:2:2",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5996:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5996:18:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "6020:4:2"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6026:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6016:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6016:20:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5989:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5989:48:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5989:48:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6046:86:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "6118:6:2"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "6127:4:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6054:63:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6054:78:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6046:4:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "6186:6:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6199:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6210:2:2",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6195:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6195:18:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6142:43:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6142:72:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6142:72:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "6268:6:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6281:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6292:2:2",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6277:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6277:18:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6224:43:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6224:72:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6224:72:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "6350:6:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6363:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6374:3:2",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6359:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6359:19:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6306:43:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6306:73:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6306:73:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value5",
                        "nodeType": "YulIdentifier",
                        "src": "6446:6:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6459:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6470:3:2",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6455:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6455:19:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_enum$_ScheduleState_$7_to_t_uint8_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6389:56:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6389:86:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6389:86:2"
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_uint256_t_uint256_t_enum$_ScheduleState_$7__to_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_uint256_t_uint256_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5722:9:2",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "5734:6:2",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "5742:6:2",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "5750:6:2",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "5758:6:2",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5766:6:2",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5774:6:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5785:4:2",
                "type": ""
              }
            ],
            "src": "5499:983:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6586:124:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6596:26:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6608:9:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6619:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6604:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6604:18:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6596:4:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6676:6:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6689:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6700:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6685:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6685:17:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6632:43:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6632:71:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6632:71:2"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6558:9:2",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6570:6:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6581:4:2",
                "type": ""
              }
            ],
            "src": "6488:222:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6756:243:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6766:19:2",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6782:2:2",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6776:5:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6776:9:2"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "6766:6:2"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6794:35:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "6816:6:2"
                      },
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "6824:4:2"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6812:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6812:17:2"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "6798:10:2",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6940:22:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "6942:16:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6942:18:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6942:18:2"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "6883:10:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6895:18:2",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "6880:2:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6880:34:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "6919:10:2"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "6931:6:2"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "6916:2:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6916:22:2"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "6877:2:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6877:62:2"
                  },
                  "nodeType": "YulIf",
                  "src": "6874:2:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6978:2:2",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "6982:10:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6971:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6971:22:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6971:22:2"
                }
              ]
            },
            "name": "allocateMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "6740:4:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "6749:6:2",
                "type": ""
              }
            ],
            "src": "6716:283:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7072:265:2",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7177:22:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "7179:16:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7179:18:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7179:18:2"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "7149:6:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7157:18:2",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "7146:2:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7146:30:2"
                  },
                  "nodeType": "YulIf",
                  "src": "7143:2:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7229:41:2",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "7245:6:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7253:4:2",
                            "type": "",
                            "value": "0x1f"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7241:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7241:17:2"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7264:4:2",
                            "type": "",
                            "value": "0x1f"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "7260:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7260:9:2"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "7237:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7237:33:2"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "7229:4:2"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7307:23:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "7319:4:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7325:4:2",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7315:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7315:15:2"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "7307:4:2"
                    }
                  ]
                }
              ]
            },
            "name": "array_allocation_size_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "7056:6:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "7067:4:2",
                "type": ""
              }
            ],
            "src": "7005:332:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7402:40:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7413:22:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7429:5:2"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7423:5:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7423:12:2"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "7413:6:2"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7385:5:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "7395:6:2",
                "type": ""
              }
            ],
            "src": "7343:99:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7544:73:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7561:3:2"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "7566:6:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7554:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7554:19:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7554:19:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7582:29:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7601:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7606:4:2",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7597:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7597:14:2"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "7582:11:2"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7516:3:2",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "7521:6:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "7532:11:2",
                "type": ""
              }
            ],
            "src": "7448:169:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7667:483:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7677:24:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7699:1:2"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_int256",
                      "nodeType": "YulIdentifier",
                      "src": "7682:16:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7682:19:2"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "7677:1:2"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7710:24:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7732:1:2"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_int256",
                      "nodeType": "YulIdentifier",
                      "src": "7715:16:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7715:19:2"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "7710:1:2"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7909:22:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "7911:16:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7911:18:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7911:18:2"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "7817:1:2"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7820:1:2",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "7813:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7813:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "7806:6:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7806:17:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "7829:1:2"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7836:66:2",
                                "type": "",
                                "value": "0x8000000000000000000000000000000000000000000000000000000000000000"
                              },
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "7904:1:2"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7832:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7832:74:2"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "7825:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7825:82:2"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "7802:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7802:106:2"
                  },
                  "nodeType": "YulIf",
                  "src": "7799:2:2"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8095:22:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "8097:16:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8097:18:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8097:18:2"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "8004:1:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8007:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "8000:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8000:9:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "8015:1:2"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8022:66:2",
                                "type": "",
                                "value": "0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                              },
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "8090:1:2"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8018:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8018:74:2"
                          }
                        ],
                        "functionName": {
                          "name": "sgt",
                          "nodeType": "YulIdentifier",
                          "src": "8011:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8011:82:2"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "7996:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7996:98:2"
                  },
                  "nodeType": "YulIf",
                  "src": "7993:2:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8127:17:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "8139:1:2"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "8142:1:2"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "8135:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8135:9:2"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "8127:4:2"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_int256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "7653:1:2",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "7656:1:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "7662:4:2",
                "type": ""
              }
            ],
            "src": "7623:527:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8201:51:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8211:35:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8240:5:2"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "8222:17:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8222:24:2"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "8211:7:2"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8183:5:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "8193:7:2",
                "type": ""
              }
            ],
            "src": "8156:96:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8311:51:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8321:35:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8350:5:2"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "8332:17:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8332:24:2"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "8321:7:2"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8293:5:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "8303:7:2",
                "type": ""
              }
            ],
            "src": "8258:104:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8428:81:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8438:16:2",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "8449:5:2"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "8438:7:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8497:5:2"
                      }
                    ],
                    "functionName": {
                      "name": "validator_assert_t_enum$_ProjectState_$11",
                      "nodeType": "YulIdentifier",
                      "src": "8455:41:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8455:48:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8455:48:2"
                }
              ]
            },
            "name": "cleanup_t_enum$_ProjectState_$11",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8410:5:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "8420:7:2",
                "type": ""
              }
            ],
            "src": "8368:141:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8575:81:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8585:16:2",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "8596:5:2"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "8585:7:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8644:5:2"
                      }
                    ],
                    "functionName": {
                      "name": "validator_assert_t_enum$_ScheduleState_$7",
                      "nodeType": "YulIdentifier",
                      "src": "8602:41:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8602:48:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8602:48:2"
                }
              ]
            },
            "name": "cleanup_t_enum$_ScheduleState_$7",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8557:5:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "8567:7:2",
                "type": ""
              }
            ],
            "src": "8515:141:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8706:32:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8716:16:2",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "8727:5:2"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "8716:7:2"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_int256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8688:5:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "8698:7:2",
                "type": ""
              }
            ],
            "src": "8662:76:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8789:81:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8799:65:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8814:5:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8821:42:2",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "8810:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8810:54:2"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "8799:7:2"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8771:5:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "8781:7:2",
                "type": ""
              }
            ],
            "src": "8744:126:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8921:32:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8931:16:2",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "8942:5:2"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "8931:7:2"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8903:5:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "8913:7:2",
                "type": ""
              }
            ],
            "src": "8876:77:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9032:68:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9042:52:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "9088:5:2"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_enum$_ProjectState_$11",
                      "nodeType": "YulIdentifier",
                      "src": "9055:32:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9055:39:2"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "9042:9:2"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_enum$_ProjectState_$11_to_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9012:5:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "9022:9:2",
                "type": ""
              }
            ],
            "src": "8959:141:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9179:68:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9189:52:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "9235:5:2"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_enum$_ScheduleState_$7",
                      "nodeType": "YulIdentifier",
                      "src": "9202:32:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9202:39:2"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "9189:9:2"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_enum$_ScheduleState_$7_to_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9159:5:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "9169:9:2",
                "type": ""
              }
            ],
            "src": "9106:141:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9304:103:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "9327:3:2"
                      },
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "9332:3:2"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "9337:6:2"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "9314:12:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9314:30:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9314:30:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dst",
                            "nodeType": "YulIdentifier",
                            "src": "9385:3:2"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "9390:6:2"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9381:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9381:16:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9399:1:2",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9374:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9374:27:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9374:27:2"
                }
              ]
            },
            "name": "copy_calldata_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "9286:3:2",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "9291:3:2",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "9296:6:2",
                "type": ""
              }
            ],
            "src": "9253:154:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9462:258:2",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9472:10:2",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "9481:1:2",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "9476:1:2",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9541:63:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "9566:3:2"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "9571:1:2"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "9562:3:2"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9562:11:2"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "9585:3:2"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "9590:1:2"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "9581:3:2"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "9581:11:2"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "9575:5:2"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9575:18:2"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "9555:6:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9555:39:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9555:39:2"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "9502:1:2"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "9505:6:2"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "9499:2:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9499:13:2"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "9513:19:2",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "9515:15:2",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "9524:1:2"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9527:2:2",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "9520:3:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9520:10:2"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "9515:1:2"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "9495:3:2",
                    "statements": []
                  },
                  "src": "9491:113:2"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9638:76:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "9688:3:2"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "9693:6:2"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "9684:3:2"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9684:16:2"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9702:1:2",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "9677:6:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9677:27:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9677:27:2"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "9619:1:2"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "9622:6:2"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "9616:2:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9616:13:2"
                  },
                  "nodeType": "YulIf",
                  "src": "9613:2:2"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "9444:3:2",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "9449:3:2",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "9454:6:2",
                "type": ""
              }
            ],
            "src": "9413:307:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9777:269:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9787:22:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "9801:4:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9807:1:2",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "9797:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9797:12:2"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "9787:6:2"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9818:38:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "9848:4:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9854:1:2",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "9844:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9844:12:2"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "9822:18:2",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9895:51:2",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "9909:27:2",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "9923:6:2"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9931:4:2",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "9919:3:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9919:17:2"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "9909:6:2"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "9875:18:2"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "9868:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9868:26:2"
                  },
                  "nodeType": "YulIf",
                  "src": "9865:2:2"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9998:42:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x22",
                            "nodeType": "YulIdentifier",
                            "src": "10012:16:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10012:18:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10012:18:2"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "9962:18:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "9985:6:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9993:2:2",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "9982:2:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9982:14:2"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "9959:2:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9959:38:2"
                  },
                  "nodeType": "YulIf",
                  "src": "9956:2:2"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "9761:4:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "9770:6:2",
                "type": ""
              }
            ],
            "src": "9726:320:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10094:189:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10104:32:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "10130:5:2"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_int256",
                      "nodeType": "YulIdentifier",
                      "src": "10113:16:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10113:23:2"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "10104:5:2"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10226:22:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "10228:16:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10228:18:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10228:18:2"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "10151:5:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10158:66:2",
                        "type": "",
                        "value": "0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "10148:2:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10148:77:2"
                  },
                  "nodeType": "YulIf",
                  "src": "10145:2:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10257:20:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "10268:5:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10275:1:2",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10264:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10264:13:2"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "10257:3:2"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_int256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10080:5:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "10090:3:2",
                "type": ""
              }
            ],
            "src": "10052:231:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10317:152:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10334:1:2",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10337:77:2",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10327:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10327:88:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10327:88:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10431:1:2",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10434:4:2",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10424:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10424:15:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10424:15:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10455:1:2",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10458:4:2",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "10448:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10448:15:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10448:15:2"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "10289:180:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10503:152:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10520:1:2",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10523:77:2",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10513:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10513:88:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10513:88:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10617:1:2",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10620:4:2",
                        "type": "",
                        "value": "0x21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10610:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10610:15:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10610:15:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10641:1:2",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10644:4:2",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "10634:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10634:15:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10634:15:2"
                }
              ]
            },
            "name": "panic_error_0x21",
            "nodeType": "YulFunctionDefinition",
            "src": "10475:180:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10689:152:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10706:1:2",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10709:77:2",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10699:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10699:88:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10699:88:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10803:1:2",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10806:4:2",
                        "type": "",
                        "value": "0x22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10796:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10796:15:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10796:15:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10827:1:2",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10830:4:2",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "10820:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10820:15:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10820:15:2"
                }
              ]
            },
            "name": "panic_error_0x22",
            "nodeType": "YulFunctionDefinition",
            "src": "10661:180:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10875:152:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10892:1:2",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10895:77:2",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10885:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10885:88:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10885:88:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10989:1:2",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10992:4:2",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10982:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10982:15:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10982:15:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11013:1:2",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11016:4:2",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "11006:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11006:15:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11006:15:2"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "10847:180:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11081:54:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11091:38:2",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "11109:5:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11116:2:2",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11105:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11105:14:2"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11125:2:2",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "11121:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11121:7:2"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "11101:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11101:28:2"
                  },
                  "variableNames": [
                    {
                      "name": "result",
                      "nodeType": "YulIdentifier",
                      "src": "11091:6:2"
                    }
                  ]
                }
              ]
            },
            "name": "round_up_to_mul_of_32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11064:5:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "result",
                "nodeType": "YulTypedName",
                "src": "11074:6:2",
                "type": ""
              }
            ],
            "src": "11033:102:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11199:62:2",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11233:22:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x21",
                            "nodeType": "YulIdentifier",
                            "src": "11235:16:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11235:18:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11235:18:2"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "11222:5:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11229:1:2",
                            "type": "",
                            "value": "3"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "11219:2:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11219:12:2"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "11212:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11212:20:2"
                  },
                  "nodeType": "YulIf",
                  "src": "11209:2:2"
                }
              ]
            },
            "name": "validator_assert_t_enum$_ProjectState_$11",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11192:5:2",
                "type": ""
              }
            ],
            "src": "11141:120:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11325:62:2",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11359:22:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x21",
                            "nodeType": "YulIdentifier",
                            "src": "11361:16:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11361:18:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11361:18:2"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "11348:5:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11355:1:2",
                            "type": "",
                            "value": "5"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "11345:2:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11345:12:2"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "11338:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11338:20:2"
                  },
                  "nodeType": "YulIf",
                  "src": "11335:2:2"
                }
              ]
            },
            "name": "validator_assert_t_enum$_ScheduleState_$7",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11318:5:2",
                "type": ""
              }
            ],
            "src": "11267:120:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11435:78:2",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11491:16:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11500:1:2",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11503:1:2",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "11493:6:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11493:12:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11493:12:2"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "11458:5:2"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "11482:5:2"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_int256",
                              "nodeType": "YulIdentifier",
                              "src": "11465:16:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11465:23:2"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "11455:2:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11455:34:2"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "11448:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11448:42:2"
                  },
                  "nodeType": "YulIf",
                  "src": "11445:2:2"
                }
              ]
            },
            "name": "validator_revert_t_int256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11428:5:2",
                "type": ""
              }
            ],
            "src": "11393:120:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11562:79:2",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11619:16:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11628:1:2",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11631:1:2",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "11621:6:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11621:12:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11621:12:2"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "11585:5:2"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "11610:5:2"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "11592:17:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11592:24:2"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "11582:2:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11582:35:2"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "11575:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11575:43:2"
                  },
                  "nodeType": "YulIf",
                  "src": "11572:2:2"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11555:5:2",
                "type": ""
              }
            ],
            "src": "11519:122:2"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocateMemory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert(0, 0) }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_int256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_int256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_int256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_int256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_int256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_enum$_ProjectState_$11_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_ProjectState_$11_to_t_uint8(value))\n    }\n\n    function abi_encode_t_enum$_ScheduleState_$7_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_ScheduleState_$7_to_t_uint8(value))\n    }\n\n    function abi_encode_t_int256_to_t_int256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_int256(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_enum$_ProjectState_$11__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_enum$_ProjectState_$11_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_int256_to_t_int256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_int256_t_uint256__to_t_int256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_int256_to_t_int256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_uint256_t_uint256_t_enum$_ScheduleState_$7__to_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_uint256_t_uint256_t_uint8__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_enum$_ScheduleState_$7_to_t_uint8_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocateMemory(size) -> memPtr {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, size)\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        // round up\n        size := and(add(length, 0x1f), not(0x1f))\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_sub_t_int256(x, y) -> diff {\n        x := cleanup_t_int256(x)\n        y := cleanup_t_int256(y)\n\n        // underflow, if y >= 0 and x < (minValue + y)\n        if and(iszero(slt(y, 0)), slt(x, add(0x8000000000000000000000000000000000000000000000000000000000000000, y))) { panic_error_0x11() }\n        // overflow, if y < 0 and x > (maxValue + y)\n        if and(slt(y, 0), sgt(x, add(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y))) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_enum$_ProjectState_$11(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_ProjectState_$11(value)\n    }\n\n    function cleanup_t_enum$_ScheduleState_$7(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_ScheduleState_$7(value)\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_enum$_ProjectState_$11_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_ProjectState_$11(value)\n    }\n\n    function convert_t_enum$_ScheduleState_$7_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_ScheduleState_$7(value)\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function increment_t_int256(value) -> ret {\n        value := cleanup_t_int256(value)\n        if eq(value, 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_assert_t_enum$_ProjectState_$11(value) {\n        if iszero(lt(value, 3)) { panic_error_0x21() }\n    }\n\n    function validator_assert_t_enum$_ScheduleState_$7(value) {\n        if iszero(lt(value, 5)) { panic_error_0x21() }\n    }\n\n    function validator_revert_t_int256(value) {\n        if iszero(eq(value, cleanup_t_int256(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 2,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "62:4925:0:-:0;;;462:1;431:32;;1968:125;;;;;;;;;;2026:10;1998:17;;:39;;;;;;;;;;;;;;;;;;2063:22;2048:12;;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;62:4925;;;;;;",
  "deployedSourceMap": "62:4925:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2945:374;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;470:40;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;591:24;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4845:139;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;517:28;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3331:400;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4611:222;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;552:32;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2105:536;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;431:32;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3739:395;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;657:51;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;4146:453;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;622:22;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2653:280;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2945:374;3040:21;1161:6;1145:22;;;;;;;;;;;;;;;;:12;;;;;;;;;;;:22;;;;;;;;;;;;;;;;;1137:31;;;;;;3088:11:::1;3101:21;1305:1;1288:14;;:18;;;;:::i;:::-;1273:11;:33;;1272:92;;;;;1358:6;1311:53;;;;;;;;;;;;;;;;:16;:29;1328:11;1311:29;;;;;;;;;;;:43;;;;;;;;;;;;:53;;;;;;;;;;;;;;;;;1272:92;1264:101;;;::::0;::::1;;3146:11:::2;3159:9;1510:8;1471:16;:29;1488:11;1471:29;;;;;;;;;;;:35;;;:47;1463:56;;;::::0;::::2;;928:13:::3;;;;;;;;;;;914:27;;:10;:27;;;906:36;;;::::0;::::3;;3252:20:::4;3206:16;:29;3223:11;3206:29;;;;;;;;;;;:43;;;:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3288:23;3299:11;3288:23;;;;;;:::i;:::-;;;;;;;;1376:1:::2;;1173::::1;;2945:374:::0;;:::o;470:40::-;;;;;;;;;;;;;:::o;591:24::-;;;;:::o;4845:139::-;4915:15;4955:21;4948:28;;4845:139;:::o;517:28::-;;;;;;;;;;;;;:::o;3331:400::-;3430:21;1161:6;1145:22;;;;;;;;;;;;;;;;:12;;;;;;;;;;;:22;;;;;;;;;;;;;;;;;1137:31;;;;;;3478:11:::1;3491:20;1305:1:::0;1288:14:::1;;:18;;;;:::i;:::-;1273:11;:33;;1272:92;;;;;1358:6;1311:53;;;;;;;;;;;;;;;;:16;:29;1328:11;1311:29;;;;;;;;;;;:43;;;;;;;;;;;;:53;;;;;;;;;;;;;;;;;1272:92;1264:101;;;::::0;::::1;;845:17:::2;;;;;;;;;;;831:31;;:10;:31;;;823:40;;;::::0;::::2;;3599:21:::3;3553:16;:29;3570:11;3553:29;;;;;;;;;;;:43;;;:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3673:10;3631:16;:29;3648:11;3631:29;;;;;;;;;;;:39;;:52;;;;3699:24;3711:11;3699:24;;;;;;:::i;:::-;;;;;;;;1173:1:::1;;3331:400:::0;;;:::o;4611:222::-;1017:13;;;;;;;;;;;1003:27;;:10;:27;;;:62;;;;1048:17;;;;;;;;;;;1034:31;;:10;:31;;;1003:62;995:71;;;;;;1613:1:::1;1588:21;:26;1580:35;;;::::0;::::1;;4747:19:::2;4732:12:::0;::::2;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4787:8;4777:7;:18;;;;4811:14;;;;;;;;;;4611:222:::0;:::o;552:32::-;;;;;;;;;;;;;:::o;2105:536::-;2236:22;1161:6;1145:22;;;;;;;;;;;;;;;;:12;;;;;;;;;;;:22;;;;;;;;;;;;;;;;;1137:31;;;;;;845:17:::1;;;;;;;;;;;831:31;;:10;:31;;;823:40;;;::::0;::::1;;2300:17:::2;;:::i;:::-;2342:10;2328:1;:11;;:24;;;;2379:12;2363:1;:13;;:28;;;;2420:21;2402:1;:15;;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;2462:6;2452:1;:7;;:16;;;::::0;::::2;2493:1;2479;:11;;:15;;;::::0;::::2;2517:1;2505;:9;;:13;;;::::0;::::2;2564:1;2529:16;:32;2546:14:::0;::::2;2529:32;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2576:14;::::0;:16:::2;;;;;;;;;:::i;:::-;;;;;;2608:25;2622:10;2608:25;;;;;;:::i;:::-;;;;;;;;868:1;2105:536:::0;;;;:::o;431:32::-;;;;:::o;3739:395::-;3838:21;1161:6;1145:22;;;;;;;;;;;;;;;;:12;;;;;;;;;;;:22;;;;;;;;;;;;;;;;;1137:31;;;;;;3886:11:::1;3899:21;1305:1;1288:14;;:18;;;;:::i;:::-;1273:11;:33;;1272:92;;;;;1358:6;1311:53;;;;;;;;;;;;;;;;:16;:29;1328:11;1311:29;;;;;;;;;;;:43;;;;;;;;;;;;:53;;;;;;;;;;;;;;;;;1272:92;1264:101;;;::::0;::::1;;928:13:::2;;;;;;;;;;;914:27;;:10;:27;;;906:36;;;::::0;::::2;;4004:22:::3;3958:16;:29;3975:11;3958:29;;;;;;;;;;;:43;;;:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4077:8;4037:16;:29;4054:11;4037:29;;;;;;;;;;;:37;;:48;;;;4101:25;4114:11;4101:25;;;;;;:::i;:::-;;;;;;;;1173:1:::1;;3739:395:::0;;;:::o;657:51::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4146:453::-;4245:21;1161:6;1145:22;;;;;;;;;;;;;;;;:12;;;;;;;;;;;:22;;;;;;;;;;;;;;;;;1137:31;;;;;;4293:11:::1;4306:22;1305:1;1288:14;;:18;;;;:::i;:::-;1273:11;:33;;1272:92;;;;;1358:6;1311:53;;;;;;;;;;;;;;;;:16;:29;1328:11;1311:29;;;;;;;;;;;:43;;;;;;;;;;;;:53;;;;;;;;;;;;;;;;;1272:92;1264:101;;;::::0;::::1;;845:17:::2;;;;;;;;;;;831:31;;:10;:31;;;823:40;;;::::0;::::2;;4370:17:::3;;;;;;;;;;;:26;;:63;4397:16;:29;4414:11;4397:29;;;;;;;;;;;:35;;;4370:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;4490:22;4444:16;:29;4461:11;4444:29;;;;;;;;;;;:43;;;:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4528:63;4542:11;4555:16;:29;4572:11;4555:29;;;;;;;;;;;:35;;;4528:63;;;;;;;:::i;:::-;;;;;;;;1173:1:::1;;4146:453:::0;;:::o;622:22::-;;;;:::o;2653:280::-;2736:22;1161:6;1145:22;;;;;;;;;;;;;;;;:12;;;;;;;;;;;:22;;;;;;;;;;;;;;;;;1137:31;;;;;;2792:10:::1;2776:13;;:26;;;;;;;;;;;;;;;;;;2828:21;2813:12;;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2872:10;2860:9;:22;;;;2898:27;2914:10;2898:27;;;;;;:::i;:::-;;;;;;;;2653:280:::0;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:344:2:-;;110:65;125:49;167:6;125:49;:::i;:::-;110:65;:::i;:::-;101:74;;198:6;191:5;184:21;236:4;229:5;225:16;274:3;265:6;260:3;256:16;253:25;250:2;;;291:1;288;281:12;250:2;304:41;338:6;333:3;328;304:41;:::i;:::-;91:260;;;;;;:::o;357:137::-;;440:6;427:20;418:29;;456:32;482:5;456:32;:::i;:::-;408:86;;;;:::o;514:273::-;;619:3;612:4;604:6;600:17;596:27;586:2;;637:1;634;627:12;586:2;677:6;664:20;702:79;777:3;769:6;762:4;754:6;750:17;702:79;:::i;:::-;693:88;;576:211;;;;;:::o;793:139::-;;877:6;864:20;855:29;;893:33;920:5;893:33;:::i;:::-;845:87;;;;:::o;938:260::-;;1045:2;1033:9;1024:7;1020:23;1016:32;1013:2;;;1061:1;1058;1051:12;1013:2;1104:1;1129:52;1173:7;1164:6;1153:9;1149:22;1129:52;:::i;:::-;1119:62;;1075:116;1003:195;;;;:::o;1204:405::-;;;1328:2;1316:9;1307:7;1303:23;1299:32;1296:2;;;1344:1;1341;1334:12;1296:2;1387:1;1412:52;1456:7;1447:6;1436:9;1432:22;1412:52;:::i;:::-;1402:62;;1358:116;1513:2;1539:53;1584:7;1575:6;1564:9;1560:22;1539:53;:::i;:::-;1529:63;;1484:118;1286:323;;;;;:::o;1615:778::-;;;;1777:2;1765:9;1756:7;1752:23;1748:32;1745:2;;;1793:1;1790;1783:12;1745:2;1864:1;1853:9;1849:17;1836:31;1894:18;1886:6;1883:30;1880:2;;;1926:1;1923;1916:12;1880:2;1954:63;2009:7;2000:6;1989:9;1985:22;1954:63;:::i;:::-;1944:73;;1807:220;2094:2;2083:9;2079:18;2066:32;2125:18;2117:6;2114:30;2111:2;;;2157:1;2154;2147:12;2111:2;2185:63;2240:7;2231:6;2220:9;2216:22;2185:63;:::i;:::-;2175:73;;2037:221;2297:2;2323:53;2368:7;2359:6;2348:9;2344:22;2323:53;:::i;:::-;2313:63;;2268:118;1735:658;;;;;:::o;2399:262::-;;2507:2;2495:9;2486:7;2482:23;2478:32;2475:2;;;2523:1;2520;2513:12;2475:2;2566:1;2591:53;2636:7;2627:6;2616:9;2612:22;2591:53;:::i;:::-;2581:63;;2537:117;2465:196;;;;:::o;2667:142::-;2770:32;2796:5;2770:32;:::i;:::-;2765:3;2758:45;2748:61;;:::o;2815:118::-;2902:24;2920:5;2902:24;:::i;:::-;2897:3;2890:37;2880:53;;:::o;2939:157::-;3039:50;3083:5;3039:50;:::i;:::-;3034:3;3027:63;3017:79;;:::o;3102:157::-;3202:50;3246:5;3202:50;:::i;:::-;3197:3;3190:63;3180:79;;:::o;3265:115::-;3350:23;3367:5;3350:23;:::i;:::-;3345:3;3338:36;3328:52;;:::o;3386:364::-;;3502:39;3535:5;3502:39;:::i;:::-;3557:71;3621:6;3616:3;3557:71;:::i;:::-;3550:78;;3637:52;3682:6;3677:3;3670:4;3663:5;3659:16;3637:52;:::i;:::-;3714:29;3736:6;3714:29;:::i;:::-;3709:3;3705:39;3698:46;;3478:272;;;;;:::o;3756:118::-;3843:24;3861:5;3843:24;:::i;:::-;3838:3;3831:37;3821:53;;:::o;3880:222::-;;4011:2;4000:9;3996:18;3988:26;;4024:71;4092:1;4081:9;4077:17;4068:6;4024:71;:::i;:::-;3978:124;;;;:::o;4108:254::-;;4255:2;4244:9;4240:18;4232:26;;4268:87;4352:1;4341:9;4337:17;4328:6;4268:87;:::i;:::-;4222:140;;;;:::o;4368:248::-;;4512:2;4501:9;4497:18;4489:26;;4525:84;4606:1;4595:9;4591:17;4582:6;4525:84;:::i;:::-;4479:137;;;;:::o;4622:218::-;;4751:2;4740:9;4736:18;4728:26;;4764:69;4830:1;4819:9;4815:17;4806:6;4764:69;:::i;:::-;4718:122;;;;:::o;4846:328::-;;5003:2;4992:9;4988:18;4980:26;;5016:69;5082:1;5071:9;5067:17;5058:6;5016:69;:::i;:::-;5095:72;5163:2;5152:9;5148:18;5139:6;5095:72;:::i;:::-;4970:204;;;;;:::o;5180:313::-;;5331:2;5320:9;5316:18;5308:26;;5380:9;5374:4;5370:20;5366:1;5355:9;5351:17;5344:47;5408:78;5481:4;5472:6;5408:78;:::i;:::-;5400:86;;5298:195;;;;:::o;5499:983::-;;5823:3;5812:9;5808:19;5800:27;;5873:9;5867:4;5863:20;5859:1;5848:9;5844:17;5837:47;5901:78;5974:4;5965:6;5901:78;:::i;:::-;5893:86;;6026:9;6020:4;6016:20;6011:2;6000:9;5996:18;5989:48;6054:78;6127:4;6118:6;6054:78;:::i;:::-;6046:86;;6142:72;6210:2;6199:9;6195:18;6186:6;6142:72;:::i;:::-;6224;6292:2;6281:9;6277:18;6268:6;6224:72;:::i;:::-;6306:73;6374:3;6363:9;6359:19;6350:6;6306:73;:::i;:::-;6389:86;6470:3;6459:9;6455:19;6446:6;6389:86;:::i;:::-;5790:692;;;;;;;;;:::o;6488:222::-;;6619:2;6608:9;6604:18;6596:26;;6632:71;6700:1;6689:9;6685:17;6676:6;6632:71;:::i;:::-;6586:124;;;;:::o;6716:283::-;;6782:2;6776:9;6766:19;;6824:4;6816:6;6812:17;6931:6;6919:10;6916:22;6895:18;6883:10;6880:34;6877:62;6874:2;;;6942:18;;:::i;:::-;6874:2;6982:10;6978:2;6971:22;6756:243;;;;:::o;7005:332::-;;7157:18;7149:6;7146:30;7143:2;;;7179:18;;:::i;:::-;7143:2;7264:4;7260:9;7253:4;7245:6;7241:17;7237:33;7229:41;;7325:4;7319;7315:15;7307:23;;7072:265;;;:::o;7343:99::-;;7429:5;7423:12;7413:22;;7402:40;;;:::o;7448:169::-;;7566:6;7561:3;7554:19;7606:4;7601:3;7597:14;7582:29;;7544:73;;;;:::o;7623:527::-;;7682:19;7699:1;7682:19;:::i;:::-;7677:24;;7715:19;7732:1;7715:19;:::i;:::-;7710:24;;7904:1;7836:66;7832:74;7829:1;7825:82;7820:1;7817;7813:9;7806:17;7802:106;7799:2;;;7911:18;;:::i;:::-;7799:2;8090:1;8022:66;8018:74;8015:1;8011:82;8007:1;8004;8000:9;7996:98;7993:2;;;8097:18;;:::i;:::-;7993:2;8142:1;8139;8135:9;8127:17;;7667:483;;;;:::o;8156:96::-;;8222:24;8240:5;8222:24;:::i;:::-;8211:35;;8201:51;;;:::o;8258:104::-;;8332:24;8350:5;8332:24;:::i;:::-;8321:35;;8311:51;;;:::o;8368:141::-;;8449:5;8438:16;;8455:48;8497:5;8455:48;:::i;:::-;8428:81;;;:::o;8515:141::-;;8596:5;8585:16;;8602:48;8644:5;8602:48;:::i;:::-;8575:81;;;:::o;8662:76::-;;8727:5;8716:16;;8706:32;;;:::o;8744:126::-;;8821:42;8814:5;8810:54;8799:65;;8789:81;;;:::o;8876:77::-;;8942:5;8931:16;;8921:32;;;:::o;8959:141::-;;9055:39;9088:5;9055:39;:::i;:::-;9042:52;;9032:68;;;:::o;9106:141::-;;9202:39;9235:5;9202:39;:::i;:::-;9189:52;;9179:68;;;:::o;9253:154::-;9337:6;9332:3;9327;9314:30;9399:1;9390:6;9385:3;9381:16;9374:27;9304:103;;;:::o;9413:307::-;9481:1;9491:113;9505:6;9502:1;9499:13;9491:113;;;9590:1;9585:3;9581:11;9575:18;9571:1;9566:3;9562:11;9555:39;9527:2;9524:1;9520:10;9515:15;;9491:113;;;9622:6;9619:1;9616:13;9613:2;;;9702:1;9693:6;9688:3;9684:16;9677:27;9613:2;9462:258;;;;:::o;9726:320::-;;9807:1;9801:4;9797:12;9787:22;;9854:1;9848:4;9844:12;9875:18;9865:2;;9931:4;9923:6;9919:17;9909:27;;9865:2;9993;9985:6;9982:14;9962:18;9959:38;9956:2;;;10012:18;;:::i;:::-;9956:2;9777:269;;;;:::o;10052:231::-;;10113:23;10130:5;10113:23;:::i;:::-;10104:32;;10158:66;10151:5;10148:77;10145:2;;;10228:18;;:::i;:::-;10145:2;10275:1;10268:5;10264:13;10257:20;;10094:189;;;:::o;10289:180::-;10337:77;10334:1;10327:88;10434:4;10431:1;10424:15;10458:4;10455:1;10448:15;10475:180;10523:77;10520:1;10513:88;10620:4;10617:1;10610:15;10644:4;10641:1;10634:15;10661:180;10709:77;10706:1;10699:88;10806:4;10803:1;10796:15;10830:4;10827:1;10820:15;10847:180;10895:77;10892:1;10885:88;10992:4;10989:1;10982:15;11016:4;11013:1;11006:15;11033:102;;11125:2;11121:7;11116:2;11109:5;11105:14;11101:28;11091:38;;11081:54;;;:::o;11141:120::-;11229:1;11222:5;11219:12;11209:2;;11235:18;;:::i;:::-;11209:2;11199:62;:::o;11267:120::-;11355:1;11348:5;11345:12;11335:2;;11361:18;;:::i;:::-;11335:2;11325:62;:::o;11393:120::-;11465:23;11482:5;11465:23;:::i;:::-;11458:5;11455:34;11445:2;;11503:1;11500;11493:12;11445:2;11435:78;:::o;11519:122::-;11592:24;11610:5;11592:24;:::i;:::-;11585:5;11582:35;11572:2;;11631:1;11628;11621:12;11572:2;11562:79;:::o",
  "source": "//SPDX-License-Identifier: MIT\r\n \r\npragma solidity ^0.8.0;\r\n\r\ncontract freelancer{\r\n    \r\n    enum ScheduleState {planned, funded, started, approved, released}\r\n    enum ProjectState {initiated, accepted, closed}\r\n    \r\n    struct schedule{\r\n        string shortCode;\r\n        string description;\r\n        uint256 value;\r\n        uint256 startDate;\r\n        uint256 endDate;\r\n        ScheduleState scheduleState;\r\n    }  \r\n  \r\n    int256 public totalSchedules = 0;\r\n    address payable public freelancerAddress;\r\n    address public clientAddress;\r\n    ProjectState public projectState;\r\n    uint256 public startDate;\r\n    uint256 public endDate;\r\n    \r\n    mapping(int256 => schedule) public scheduleRegister;\r\n  \r\n\tmodifier condition(bool _condition) {\r\n\t\trequire(_condition);\r\n\t\t_;\r\n\t}\r\n\r\n\tmodifier onlyFreelancer() {\r\n\t\trequire(msg.sender == freelancerAddress);\r\n\t\t_;\r\n\t}\r\n\r\n\tmodifier onlyClient() {\r\n\t\trequire(msg.sender == clientAddress);\r\n\t\t_;\r\n\t}\r\n\t\r\n\tmodifier bothClientFreelancer(){\r\n\t\trequire(msg.sender == clientAddress || msg.sender == freelancerAddress);\r\n\t\t_;\t    \r\n\t}\r\n\r\n\tmodifier inProjectState(ProjectState _state) {\r\n\t\trequire(projectState == _state);\r\n\t\t_;\r\n\t}\r\n\r\n    modifier inScheduleState(int256 _scheduleID, ScheduleState _state){\r\n        require((_scheduleID <= totalSchedules - 1) && scheduleRegister[_scheduleID].scheduleState == _state);\r\n        _;\r\n    }\r\n\r\n    modifier ampleFunding(int256 _scheduleID, uint256 _funding){\r\n        require(scheduleRegister[_scheduleID].value == _funding);\r\n        _;\r\n    }\r\n\r\n    modifier noMoreFunds(){\r\n        require(address(this).balance == 0);\r\n        _;\r\n    }\r\n\r\n    event scheduleAdded(string shortCode);\r\n    event projectAccepted(address clientAddress);\r\n    event taskFunded(int256 scheduleID);\r\n    event taskStarted(int256 scheduleID);\r\n    event taskApproved(int256 scheduleID);\r\n    event fundsReleased(int256 scheduleID, uint256 valueReleased);\r\n    event projectEnded();\r\n    \r\n    constructor()\r\n    {\r\n        freelancerAddress = payable(msg.sender);\r\n        projectState = ProjectState.initiated;\r\n    }\r\n    \r\n    function addSchedule(string memory _shortCode, string memory _description, uint256 _value)\r\n        public\r\n        inProjectState(ProjectState.initiated)\r\n        onlyFreelancer\r\n    {\r\n        schedule memory s;\r\n        s.shortCode = _shortCode;\r\n        s.description = _description;\r\n        s.scheduleState = ScheduleState.planned;\r\n        s.value = _value;\r\n        s.startDate = 0;\r\n        s.endDate = 0;\r\n        scheduleRegister[totalSchedules] = s;\r\n        totalSchedules++;\r\n        emit scheduleAdded(_shortCode);\r\n    }\r\n    \r\n    function acceptProject(uint256 _startDate)\r\n        public\r\n        inProjectState(ProjectState.initiated)\r\n    {\r\n        clientAddress = msg.sender;\r\n        projectState = ProjectState.accepted;\r\n        startDate = _startDate;\r\n        emit projectAccepted(msg.sender);\r\n    }\r\n    \r\n    function fundTask(int256 _scheduleID)\r\n        public\r\n        payable\r\n        inProjectState(ProjectState.accepted)\r\n        inScheduleState(_scheduleID, ScheduleState.planned)\r\n        ampleFunding(_scheduleID, msg.value)\r\n        onlyClient\r\n    {\r\n        scheduleRegister[_scheduleID].scheduleState = ScheduleState.funded;\r\n        emit taskFunded(_scheduleID);\r\n    }\r\n    \r\n    function startTask(int256 _scheduleID, uint256 _startDate)\r\n        public\r\n        inProjectState(ProjectState.accepted)\r\n        inScheduleState(_scheduleID, ScheduleState.funded)\r\n        onlyFreelancer\r\n    {\r\n        scheduleRegister[_scheduleID].scheduleState = ScheduleState.started;\r\n        scheduleRegister[_scheduleID].startDate = _startDate;\r\n        emit taskStarted(_scheduleID);\r\n    }\r\n\r\n    function approveTask(int256 _scheduleID, uint256 _endDate)\r\n        public\r\n        inProjectState(ProjectState.accepted)\r\n        inScheduleState(_scheduleID, ScheduleState.started)\r\n        onlyClient\r\n    {\r\n        scheduleRegister[_scheduleID].scheduleState = ScheduleState.approved;\r\n        scheduleRegister[_scheduleID].endDate = _endDate;\r\n        emit taskApproved(_scheduleID);\r\n    }\r\n    \r\n    function releaseFunds(int256 _scheduleID)\r\n        public\r\n        payable\r\n        inProjectState(ProjectState.accepted)\r\n        inScheduleState(_scheduleID, ScheduleState.approved)\r\n        onlyFreelancer\r\n    {\r\n        freelancerAddress.transfer(scheduleRegister[_scheduleID].value);\r\n        scheduleRegister[_scheduleID].scheduleState = ScheduleState.released;\r\n        emit fundsReleased(_scheduleID, scheduleRegister[_scheduleID].value);\r\n    }\r\n    \r\n    function endProject(uint256 _endDate)\r\n        public\r\n        bothClientFreelancer\r\n        noMoreFunds\r\n    {\r\n        projectState = ProjectState.closed;\r\n        endDate = _endDate;\r\n        emit projectEnded();\r\n    }\r\n    \r\n    function getBalance()\r\n        public\r\n        view\r\n        returns (uint256 balance)\r\n    {\r\n        return address(this).balance;\r\n    }\r\n} ",
  "sourcePath": "H:\\BLOCKCHAIN\\Freelancer\\contracts\\Freelancer.sol",
  "ast": {
    "absolutePath": "project:/contracts/Freelancer.sol",
    "exportedSymbols": {
      "freelancer": [
        492
      ]
    },
    "id": 493,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "35:23:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 492,
        "linearizedBaseContracts": [
          492
        ],
        "name": "freelancer",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "freelancer.ScheduleState",
            "id": 7,
            "members": [
              {
                "id": 2,
                "name": "planned",
                "nodeType": "EnumValue",
                "src": "114:7:0"
              },
              {
                "id": 3,
                "name": "funded",
                "nodeType": "EnumValue",
                "src": "123:6:0"
              },
              {
                "id": 4,
                "name": "started",
                "nodeType": "EnumValue",
                "src": "131:7:0"
              },
              {
                "id": 5,
                "name": "approved",
                "nodeType": "EnumValue",
                "src": "140:8:0"
              },
              {
                "id": 6,
                "name": "released",
                "nodeType": "EnumValue",
                "src": "150:8:0"
              }
            ],
            "name": "ScheduleState",
            "nodeType": "EnumDefinition",
            "src": "94:65:0"
          },
          {
            "canonicalName": "freelancer.ProjectState",
            "id": 11,
            "members": [
              {
                "id": 8,
                "name": "initiated",
                "nodeType": "EnumValue",
                "src": "184:9:0"
              },
              {
                "id": 9,
                "name": "accepted",
                "nodeType": "EnumValue",
                "src": "195:8:0"
              },
              {
                "id": 10,
                "name": "closed",
                "nodeType": "EnumValue",
                "src": "205:6:0"
              }
            ],
            "name": "ProjectState",
            "nodeType": "EnumDefinition",
            "src": "165:47:0"
          },
          {
            "canonicalName": "freelancer.schedule",
            "id": 25,
            "members": [
              {
                "constant": false,
                "id": 13,
                "mutability": "mutable",
                "name": "shortCode",
                "nodeType": "VariableDeclaration",
                "scope": 25,
                "src": "250:16:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 12,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "250:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 15,
                "mutability": "mutable",
                "name": "description",
                "nodeType": "VariableDeclaration",
                "scope": 25,
                "src": "277:18:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 14,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "277:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 17,
                "mutability": "mutable",
                "name": "value",
                "nodeType": "VariableDeclaration",
                "scope": 25,
                "src": "306:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 16,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "306:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 19,
                "mutability": "mutable",
                "name": "startDate",
                "nodeType": "VariableDeclaration",
                "scope": 25,
                "src": "330:17:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 18,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "330:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 21,
                "mutability": "mutable",
                "name": "endDate",
                "nodeType": "VariableDeclaration",
                "scope": 25,
                "src": "358:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 20,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "358:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 24,
                "mutability": "mutable",
                "name": "scheduleState",
                "nodeType": "VariableDeclaration",
                "scope": 25,
                "src": "384:27:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_ScheduleState_$7",
                  "typeString": "enum freelancer.ScheduleState"
                },
                "typeName": {
                  "id": 23,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 22,
                    "name": "ScheduleState",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 7,
                    "src": "384:13:0"
                  },
                  "referencedDeclaration": 7,
                  "src": "384:13:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_ScheduleState_$7",
                    "typeString": "enum freelancer.ScheduleState"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "schedule",
            "nodeType": "StructDefinition",
            "scope": 492,
            "src": "224:195:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "965720af",
            "id": 28,
            "mutability": "mutable",
            "name": "totalSchedules",
            "nodeType": "VariableDeclaration",
            "scope": 492,
            "src": "431:32:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_int256",
              "typeString": "int256"
            },
            "typeName": {
              "id": 26,
              "name": "int256",
              "nodeType": "ElementaryTypeName",
              "src": "431:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_int256",
                "typeString": "int256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 27,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "462:1:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "06a4e7cb",
            "id": 30,
            "mutability": "mutable",
            "name": "freelancerAddress",
            "nodeType": "VariableDeclaration",
            "scope": 492,
            "src": "470:40:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 29,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "470:15:0",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2c2ab5ea",
            "id": 32,
            "mutability": "mutable",
            "name": "clientAddress",
            "nodeType": "VariableDeclaration",
            "scope": 492,
            "src": "517:28:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 31,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "517:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "748807ab",
            "id": 35,
            "mutability": "mutable",
            "name": "projectState",
            "nodeType": "VariableDeclaration",
            "scope": 492,
            "src": "552:32:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_ProjectState_$11",
              "typeString": "enum freelancer.ProjectState"
            },
            "typeName": {
              "id": 34,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 33,
                "name": "ProjectState",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 11,
                "src": "552:12:0"
              },
              "referencedDeclaration": 11,
              "src": "552:12:0",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_ProjectState_$11",
                "typeString": "enum freelancer.ProjectState"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "0b97bc86",
            "id": 37,
            "mutability": "mutable",
            "name": "startDate",
            "nodeType": "VariableDeclaration",
            "scope": 492,
            "src": "591:24:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 36,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "591:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c24a0f8b",
            "id": 39,
            "mutability": "mutable",
            "name": "endDate",
            "nodeType": "VariableDeclaration",
            "scope": 492,
            "src": "622:22:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 38,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "622:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "bab56910",
            "id": 44,
            "mutability": "mutable",
            "name": "scheduleRegister",
            "nodeType": "VariableDeclaration",
            "scope": 492,
            "src": "657:51:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_int256_$_t_struct$_schedule_$25_storage_$",
              "typeString": "mapping(int256 => struct freelancer.schedule)"
            },
            "typeName": {
              "id": 43,
              "keyType": {
                "id": 40,
                "name": "int256",
                "nodeType": "ElementaryTypeName",
                "src": "665:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_int256",
                  "typeString": "int256"
                }
              },
              "nodeType": "Mapping",
              "src": "657:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_int256_$_t_struct$_schedule_$25_storage_$",
                "typeString": "mapping(int256 => struct freelancer.schedule)"
              },
              "valueType": {
                "id": 42,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 41,
                  "name": "schedule",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 25,
                  "src": "675:8:0"
                },
                "referencedDeclaration": 25,
                "src": "675:8:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_schedule_$25_storage_ptr",
                  "typeString": "struct freelancer.schedule"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 53,
              "nodeType": "Block",
              "src": "752:35:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 49,
                        "name": "_condition",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46,
                        "src": "765:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 48,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "757:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 50,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "757:19:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51,
                  "nodeType": "ExpressionStatement",
                  "src": "757:19:0"
                },
                {
                  "id": 52,
                  "nodeType": "PlaceholderStatement",
                  "src": "781:1:0"
                }
              ]
            },
            "id": 54,
            "name": "condition",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 47,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46,
                  "mutability": "mutable",
                  "name": "_condition",
                  "nodeType": "VariableDeclaration",
                  "scope": 54,
                  "src": "735:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 45,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "735:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "734:17:0"
            },
            "src": "716:71:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 64,
              "nodeType": "Block",
              "src": "818:56:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 60,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 57,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "831:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 58,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "831:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 59,
                          "name": "freelancerAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30,
                          "src": "845:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "831:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 56,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "823:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 61,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "823:40:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 62,
                  "nodeType": "ExpressionStatement",
                  "src": "823:40:0"
                },
                {
                  "id": 63,
                  "nodeType": "PlaceholderStatement",
                  "src": "868:1:0"
                }
              ]
            },
            "id": 65,
            "name": "onlyFreelancer",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 55,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "815:2:0"
            },
            "src": "792:82:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 75,
              "nodeType": "Block",
              "src": "901:52:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 71,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 68,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "914:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 69,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "914:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 70,
                          "name": "clientAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32,
                          "src": "928:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "914:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 67,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "906:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 72,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "906:36:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73,
                  "nodeType": "ExpressionStatement",
                  "src": "906:36:0"
                },
                {
                  "id": 74,
                  "nodeType": "PlaceholderStatement",
                  "src": "947:1:0"
                }
              ]
            },
            "id": 76,
            "name": "onlyClient",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 66,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "898:2:0"
            },
            "src": "879:74:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 91,
              "nodeType": "Block",
              "src": "990:92:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 87,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 82,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 79,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1003:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 80,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1003:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 81,
                            "name": "clientAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32,
                            "src": "1017:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1003:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 86,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 83,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1034:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 84,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1034:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 85,
                            "name": "freelancerAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30,
                            "src": "1048:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "1034:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1003:62:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 78,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "995:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 88,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "995:71:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89,
                  "nodeType": "ExpressionStatement",
                  "src": "995:71:0"
                },
                {
                  "id": 90,
                  "nodeType": "PlaceholderStatement",
                  "src": "1071:1:0"
                }
              ]
            },
            "id": 92,
            "name": "bothClientFreelancer",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 77,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "988:2:0"
            },
            "src": "959:123:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 104,
              "nodeType": "Block",
              "src": "1132:47:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_ProjectState_$11",
                          "typeString": "enum freelancer.ProjectState"
                        },
                        "id": 100,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 98,
                          "name": "projectState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35,
                          "src": "1145:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ProjectState_$11",
                            "typeString": "enum freelancer.ProjectState"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 99,
                          "name": "_state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 95,
                          "src": "1161:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ProjectState_$11",
                            "typeString": "enum freelancer.ProjectState"
                          }
                        },
                        "src": "1145:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 97,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1137:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1137:31:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102,
                  "nodeType": "ExpressionStatement",
                  "src": "1137:31:0"
                },
                {
                  "id": 103,
                  "nodeType": "PlaceholderStatement",
                  "src": "1173:1:0"
                }
              ]
            },
            "id": 105,
            "name": "inProjectState",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 96,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 95,
                  "mutability": "mutable",
                  "name": "_state",
                  "nodeType": "VariableDeclaration",
                  "scope": 105,
                  "src": "1111:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_ProjectState_$11",
                    "typeString": "enum freelancer.ProjectState"
                  },
                  "typeName": {
                    "id": 94,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 93,
                      "name": "ProjectState",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 11,
                      "src": "1111:12:0"
                    },
                    "referencedDeclaration": 11,
                    "src": "1111:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ProjectState_$11",
                      "typeString": "enum freelancer.ProjectState"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1110:21:0"
            },
            "src": "1087:92:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 129,
              "nodeType": "Block",
              "src": "1253:132:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              },
                              "id": 117,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 113,
                                "name": "_scheduleID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 107,
                                "src": "1273:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                },
                                "id": 116,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 114,
                                  "name": "totalSchedules",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 28,
                                  "src": "1288:14:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "hexValue": "31",
                                  "id": 115,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1305:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "1288:18:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              "src": "1273:33:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 118,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "1272:35:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_ScheduleState_$7",
                            "typeString": "enum freelancer.ScheduleState"
                          },
                          "id": 124,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 119,
                                "name": "scheduleRegister",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 44,
                                "src": "1311:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_int256_$_t_struct$_schedule_$25_storage_$",
                                  "typeString": "mapping(int256 => struct freelancer.schedule storage ref)"
                                }
                              },
                              "id": 121,
                              "indexExpression": {
                                "id": 120,
                                "name": "_scheduleID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 107,
                                "src": "1328:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1311:29:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_schedule_$25_storage",
                                "typeString": "struct freelancer.schedule storage ref"
                              }
                            },
                            "id": 122,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "scheduleState",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24,
                            "src": "1311:43:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ScheduleState_$7",
                              "typeString": "enum freelancer.ScheduleState"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 123,
                            "name": "_state",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 110,
                            "src": "1358:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ScheduleState_$7",
                              "typeString": "enum freelancer.ScheduleState"
                            }
                          },
                          "src": "1311:53:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1272:92:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 112,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1264:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1264:101:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 127,
                  "nodeType": "ExpressionStatement",
                  "src": "1264:101:0"
                },
                {
                  "id": 128,
                  "nodeType": "PlaceholderStatement",
                  "src": "1376:1:0"
                }
              ]
            },
            "id": 130,
            "name": "inScheduleState",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 111,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 107,
                  "mutability": "mutable",
                  "name": "_scheduleID",
                  "nodeType": "VariableDeclaration",
                  "scope": 130,
                  "src": "1212:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 106,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1212:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 110,
                  "mutability": "mutable",
                  "name": "_state",
                  "nodeType": "VariableDeclaration",
                  "scope": 130,
                  "src": "1232:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_ScheduleState_$7",
                    "typeString": "enum freelancer.ScheduleState"
                  },
                  "typeName": {
                    "id": 109,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 108,
                      "name": "ScheduleState",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7,
                      "src": "1232:13:0"
                    },
                    "referencedDeclaration": 7,
                    "src": "1232:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ScheduleState_$7",
                      "typeString": "enum freelancer.ScheduleState"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1211:42:0"
            },
            "src": "1187:198:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 146,
              "nodeType": "Block",
              "src": "1452:87:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 137,
                              "name": "scheduleRegister",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44,
                              "src": "1471:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_int256_$_t_struct$_schedule_$25_storage_$",
                                "typeString": "mapping(int256 => struct freelancer.schedule storage ref)"
                              }
                            },
                            "id": 139,
                            "indexExpression": {
                              "id": 138,
                              "name": "_scheduleID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 132,
                              "src": "1488:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1471:29:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_schedule_$25_storage",
                              "typeString": "struct freelancer.schedule storage ref"
                            }
                          },
                          "id": 140,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17,
                          "src": "1471:35:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 141,
                          "name": "_funding",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 134,
                          "src": "1510:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1471:47:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 136,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1463:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1463:56:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 144,
                  "nodeType": "ExpressionStatement",
                  "src": "1463:56:0"
                },
                {
                  "id": 145,
                  "nodeType": "PlaceholderStatement",
                  "src": "1530:1:0"
                }
              ]
            },
            "id": 147,
            "name": "ampleFunding",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 135,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 132,
                  "mutability": "mutable",
                  "name": "_scheduleID",
                  "nodeType": "VariableDeclaration",
                  "scope": 147,
                  "src": "1415:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 131,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1415:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 134,
                  "mutability": "mutable",
                  "name": "_funding",
                  "nodeType": "VariableDeclaration",
                  "scope": 147,
                  "src": "1435:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 133,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1435:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1414:38:0"
            },
            "src": "1393:146:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 160,
              "nodeType": "Block",
              "src": "1569:66:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 156,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 152,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "1596:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_freelancer_$492",
                                  "typeString": "contract freelancer"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_freelancer_$492",
                                  "typeString": "contract freelancer"
                                }
                              ],
                              "id": 151,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1588:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 150,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1588:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 153,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1588:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 154,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "1588:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 155,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1613:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1588:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 149,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1580:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1580:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 158,
                  "nodeType": "ExpressionStatement",
                  "src": "1580:35:0"
                },
                {
                  "id": 159,
                  "nodeType": "PlaceholderStatement",
                  "src": "1626:1:0"
                }
              ]
            },
            "id": 161,
            "name": "noMoreFunds",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 148,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1567:2:0"
            },
            "src": "1547:88:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "id": 165,
            "name": "scheduleAdded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 164,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 163,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "shortCode",
                  "nodeType": "VariableDeclaration",
                  "scope": 165,
                  "src": "1663:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 162,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1663:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1662:18:0"
            },
            "src": "1643:38:0"
          },
          {
            "anonymous": false,
            "id": 169,
            "name": "projectAccepted",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 168,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 167,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "clientAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 169,
                  "src": "1709:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 166,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1709:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1708:23:0"
            },
            "src": "1687:45:0"
          },
          {
            "anonymous": false,
            "id": 173,
            "name": "taskFunded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 172,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 171,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "scheduleID",
                  "nodeType": "VariableDeclaration",
                  "scope": 173,
                  "src": "1755:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 170,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1755:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1754:19:0"
            },
            "src": "1738:36:0"
          },
          {
            "anonymous": false,
            "id": 177,
            "name": "taskStarted",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 176,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 175,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "scheduleID",
                  "nodeType": "VariableDeclaration",
                  "scope": 177,
                  "src": "1798:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 174,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1798:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1797:19:0"
            },
            "src": "1780:37:0"
          },
          {
            "anonymous": false,
            "id": 181,
            "name": "taskApproved",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 180,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 179,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "scheduleID",
                  "nodeType": "VariableDeclaration",
                  "scope": 181,
                  "src": "1842:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 178,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1842:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1841:19:0"
            },
            "src": "1823:38:0"
          },
          {
            "anonymous": false,
            "id": 187,
            "name": "fundsReleased",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 186,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 183,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "scheduleID",
                  "nodeType": "VariableDeclaration",
                  "scope": 187,
                  "src": "1887:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 182,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1887:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 185,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "valueReleased",
                  "nodeType": "VariableDeclaration",
                  "scope": 187,
                  "src": "1906:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 184,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1906:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1886:42:0"
            },
            "src": "1867:62:0"
          },
          {
            "anonymous": false,
            "id": 189,
            "name": "projectEnded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 188,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1953:2:0"
            },
            "src": "1935:21:0"
          },
          {
            "body": {
              "id": 205,
              "nodeType": "Block",
              "src": "1987:106:0",
              "statements": [
                {
                  "expression": {
                    "id": 198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 192,
                      "name": "freelancerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30,
                      "src": "1998:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 195,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2026:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 196,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2026:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 194,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2018:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 193,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2018:8:0",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 197,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2018:19:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1998:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 199,
                  "nodeType": "ExpressionStatement",
                  "src": "1998:39:0"
                },
                {
                  "expression": {
                    "id": 203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 200,
                      "name": "projectState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "2048:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ProjectState_$11",
                        "typeString": "enum freelancer.ProjectState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 201,
                        "name": "ProjectState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "2063:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_ProjectState_$11_$",
                          "typeString": "type(enum freelancer.ProjectState)"
                        }
                      },
                      "id": 202,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "initiated",
                      "nodeType": "MemberAccess",
                      "src": "2063:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ProjectState_$11",
                        "typeString": "enum freelancer.ProjectState"
                      }
                    },
                    "src": "2048:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ProjectState_$11",
                      "typeString": "enum freelancer.ProjectState"
                    }
                  },
                  "id": 204,
                  "nodeType": "ExpressionStatement",
                  "src": "2048:37:0"
                }
              ]
            },
            "id": 206,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 190,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1979:2:0"
            },
            "returnParameters": {
              "id": 191,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1987:0:0"
            },
            "scope": 492,
            "src": "1968:125:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 275,
              "nodeType": "Block",
              "src": "2289:352:0",
              "statements": [
                {
                  "assignments": [
                    223
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 223,
                      "mutability": "mutable",
                      "name": "s",
                      "nodeType": "VariableDeclaration",
                      "scope": 275,
                      "src": "2300:17:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_schedule_$25_memory_ptr",
                        "typeString": "struct freelancer.schedule"
                      },
                      "typeName": {
                        "id": 222,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 221,
                          "name": "schedule",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 25,
                          "src": "2300:8:0"
                        },
                        "referencedDeclaration": 25,
                        "src": "2300:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_schedule_$25_storage_ptr",
                          "typeString": "struct freelancer.schedule"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 224,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2300:17:0"
                },
                {
                  "expression": {
                    "id": 229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 225,
                        "name": "s",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 223,
                        "src": "2328:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_schedule_$25_memory_ptr",
                          "typeString": "struct freelancer.schedule memory"
                        }
                      },
                      "id": 227,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "shortCode",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13,
                      "src": "2328:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 228,
                      "name": "_shortCode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 208,
                      "src": "2342:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2328:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 230,
                  "nodeType": "ExpressionStatement",
                  "src": "2328:24:0"
                },
                {
                  "expression": {
                    "id": 235,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 231,
                        "name": "s",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 223,
                        "src": "2363:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_schedule_$25_memory_ptr",
                          "typeString": "struct freelancer.schedule memory"
                        }
                      },
                      "id": 233,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "description",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15,
                      "src": "2363:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 234,
                      "name": "_description",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 210,
                      "src": "2379:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2363:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 236,
                  "nodeType": "ExpressionStatement",
                  "src": "2363:28:0"
                },
                {
                  "expression": {
                    "id": 242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 237,
                        "name": "s",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 223,
                        "src": "2402:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_schedule_$25_memory_ptr",
                          "typeString": "struct freelancer.schedule memory"
                        }
                      },
                      "id": 239,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "scheduleState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24,
                      "src": "2402:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ScheduleState_$7",
                        "typeString": "enum freelancer.ScheduleState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 240,
                        "name": "ScheduleState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "2420:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_ScheduleState_$7_$",
                          "typeString": "type(enum freelancer.ScheduleState)"
                        }
                      },
                      "id": 241,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "planned",
                      "nodeType": "MemberAccess",
                      "src": "2420:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ScheduleState_$7",
                        "typeString": "enum freelancer.ScheduleState"
                      }
                    },
                    "src": "2402:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ScheduleState_$7",
                      "typeString": "enum freelancer.ScheduleState"
                    }
                  },
                  "id": 243,
                  "nodeType": "ExpressionStatement",
                  "src": "2402:39:0"
                },
                {
                  "expression": {
                    "id": 248,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 244,
                        "name": "s",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 223,
                        "src": "2452:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_schedule_$25_memory_ptr",
                          "typeString": "struct freelancer.schedule memory"
                        }
                      },
                      "id": 246,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17,
                      "src": "2452:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 247,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 212,
                      "src": "2462:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2452:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 249,
                  "nodeType": "ExpressionStatement",
                  "src": "2452:16:0"
                },
                {
                  "expression": {
                    "id": 254,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 250,
                        "name": "s",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 223,
                        "src": "2479:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_schedule_$25_memory_ptr",
                          "typeString": "struct freelancer.schedule memory"
                        }
                      },
                      "id": 252,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "startDate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19,
                      "src": "2479:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 253,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2493:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2479:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 255,
                  "nodeType": "ExpressionStatement",
                  "src": "2479:15:0"
                },
                {
                  "expression": {
                    "id": 260,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 256,
                        "name": "s",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 223,
                        "src": "2505:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_schedule_$25_memory_ptr",
                          "typeString": "struct freelancer.schedule memory"
                        }
                      },
                      "id": 258,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "endDate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21,
                      "src": "2505:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 259,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2517:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2505:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 261,
                  "nodeType": "ExpressionStatement",
                  "src": "2505:13:0"
                },
                {
                  "expression": {
                    "id": 266,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 262,
                        "name": "scheduleRegister",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "2529:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_int256_$_t_struct$_schedule_$25_storage_$",
                          "typeString": "mapping(int256 => struct freelancer.schedule storage ref)"
                        }
                      },
                      "id": 264,
                      "indexExpression": {
                        "id": 263,
                        "name": "totalSchedules",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28,
                        "src": "2546:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2529:32:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_schedule_$25_storage",
                        "typeString": "struct freelancer.schedule storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 265,
                      "name": "s",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 223,
                      "src": "2564:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_schedule_$25_memory_ptr",
                        "typeString": "struct freelancer.schedule memory"
                      }
                    },
                    "src": "2529:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_schedule_$25_storage",
                      "typeString": "struct freelancer.schedule storage ref"
                    }
                  },
                  "id": 267,
                  "nodeType": "ExpressionStatement",
                  "src": "2529:36:0"
                },
                {
                  "expression": {
                    "id": 269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "2576:16:0",
                    "subExpression": {
                      "id": 268,
                      "name": "totalSchedules",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28,
                      "src": "2576:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "id": 270,
                  "nodeType": "ExpressionStatement",
                  "src": "2576:16:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 272,
                        "name": "_shortCode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 208,
                        "src": "2622:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 271,
                      "name": "scheduleAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 165,
                      "src": "2608:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2608:25:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 274,
                  "nodeType": "EmitStatement",
                  "src": "2603:30:0"
                }
              ]
            },
            "functionSelector": "84bf66ac",
            "id": 276,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 215,
                      "name": "ProjectState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "2236:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_ProjectState_$11_$",
                        "typeString": "type(enum freelancer.ProjectState)"
                      }
                    },
                    "id": 216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "initiated",
                    "nodeType": "MemberAccess",
                    "src": "2236:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ProjectState_$11",
                      "typeString": "enum freelancer.ProjectState"
                    }
                  }
                ],
                "id": 217,
                "modifierName": {
                  "id": 214,
                  "name": "inProjectState",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 105,
                  "src": "2221:14:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2221:38:0"
              },
              {
                "id": 219,
                "modifierName": {
                  "id": 218,
                  "name": "onlyFreelancer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 65,
                  "src": "2269:14:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2269:14:0"
              }
            ],
            "name": "addSchedule",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 213,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 208,
                  "mutability": "mutable",
                  "name": "_shortCode",
                  "nodeType": "VariableDeclaration",
                  "scope": 276,
                  "src": "2126:24:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 207,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2126:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 210,
                  "mutability": "mutable",
                  "name": "_description",
                  "nodeType": "VariableDeclaration",
                  "scope": 276,
                  "src": "2152:26:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 209,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2152:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 212,
                  "mutability": "mutable",
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 276,
                  "src": "2180:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 211,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2180:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2125:70:0"
            },
            "returnParameters": {
              "id": 220,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2289:0:0"
            },
            "scope": 492,
            "src": "2105:536:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 304,
              "nodeType": "Block",
              "src": "2765:168:0",
              "statements": [
                {
                  "expression": {
                    "id": 288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 285,
                      "name": "clientAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32,
                      "src": "2776:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 286,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "2792:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 287,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2792:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2776:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 289,
                  "nodeType": "ExpressionStatement",
                  "src": "2776:26:0"
                },
                {
                  "expression": {
                    "id": 293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 290,
                      "name": "projectState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "2813:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ProjectState_$11",
                        "typeString": "enum freelancer.ProjectState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 291,
                        "name": "ProjectState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "2828:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_ProjectState_$11_$",
                          "typeString": "type(enum freelancer.ProjectState)"
                        }
                      },
                      "id": 292,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "accepted",
                      "nodeType": "MemberAccess",
                      "src": "2828:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ProjectState_$11",
                        "typeString": "enum freelancer.ProjectState"
                      }
                    },
                    "src": "2813:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ProjectState_$11",
                      "typeString": "enum freelancer.ProjectState"
                    }
                  },
                  "id": 294,
                  "nodeType": "ExpressionStatement",
                  "src": "2813:36:0"
                },
                {
                  "expression": {
                    "id": 297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 295,
                      "name": "startDate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37,
                      "src": "2860:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 296,
                      "name": "_startDate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 278,
                      "src": "2872:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2860:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 298,
                  "nodeType": "ExpressionStatement",
                  "src": "2860:22:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 300,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2914:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 301,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2914:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 299,
                      "name": "projectAccepted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 169,
                      "src": "2898:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2898:27:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 303,
                  "nodeType": "EmitStatement",
                  "src": "2893:32:0"
                }
              ]
            },
            "functionSelector": "fd1d5ea9",
            "id": 305,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 281,
                      "name": "ProjectState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "2736:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_ProjectState_$11_$",
                        "typeString": "type(enum freelancer.ProjectState)"
                      }
                    },
                    "id": 282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "initiated",
                    "nodeType": "MemberAccess",
                    "src": "2736:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ProjectState_$11",
                      "typeString": "enum freelancer.ProjectState"
                    }
                  }
                ],
                "id": 283,
                "modifierName": {
                  "id": 280,
                  "name": "inProjectState",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 105,
                  "src": "2721:14:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2721:38:0"
              }
            ],
            "name": "acceptProject",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 279,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 278,
                  "mutability": "mutable",
                  "name": "_startDate",
                  "nodeType": "VariableDeclaration",
                  "scope": 305,
                  "src": "2676:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 277,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2676:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2675:20:0"
            },
            "returnParameters": {
              "id": 284,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2765:0:0"
            },
            "scope": 492,
            "src": "2653:280:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 338,
              "nodeType": "Block",
              "src": "3195:124:0",
              "statements": [
                {
                  "expression": {
                    "id": 332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 326,
                          "name": "scheduleRegister",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44,
                          "src": "3206:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_int256_$_t_struct$_schedule_$25_storage_$",
                            "typeString": "mapping(int256 => struct freelancer.schedule storage ref)"
                          }
                        },
                        "id": 328,
                        "indexExpression": {
                          "id": 327,
                          "name": "_scheduleID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 307,
                          "src": "3223:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3206:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_schedule_$25_storage",
                          "typeString": "struct freelancer.schedule storage ref"
                        }
                      },
                      "id": 329,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "scheduleState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24,
                      "src": "3206:43:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ScheduleState_$7",
                        "typeString": "enum freelancer.ScheduleState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 330,
                        "name": "ScheduleState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "3252:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_ScheduleState_$7_$",
                          "typeString": "type(enum freelancer.ScheduleState)"
                        }
                      },
                      "id": 331,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "funded",
                      "nodeType": "MemberAccess",
                      "src": "3252:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ScheduleState_$7",
                        "typeString": "enum freelancer.ScheduleState"
                      }
                    },
                    "src": "3206:66:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ScheduleState_$7",
                      "typeString": "enum freelancer.ScheduleState"
                    }
                  },
                  "id": 333,
                  "nodeType": "ExpressionStatement",
                  "src": "3206:66:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 335,
                        "name": "_scheduleID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 307,
                        "src": "3299:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "id": 334,
                      "name": "taskFunded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 173,
                      "src": "3288:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_int256_$returns$__$",
                        "typeString": "function (int256)"
                      }
                    },
                    "id": 336,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3288:23:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 337,
                  "nodeType": "EmitStatement",
                  "src": "3283:28:0"
                }
              ]
            },
            "functionSelector": "054f84ed",
            "id": 339,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 310,
                      "name": "ProjectState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "3040:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_ProjectState_$11_$",
                        "typeString": "type(enum freelancer.ProjectState)"
                      }
                    },
                    "id": 311,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "accepted",
                    "nodeType": "MemberAccess",
                    "src": "3040:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ProjectState_$11",
                      "typeString": "enum freelancer.ProjectState"
                    }
                  }
                ],
                "id": 312,
                "modifierName": {
                  "id": 309,
                  "name": "inProjectState",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 105,
                  "src": "3025:14:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "3025:37:0"
              },
              {
                "arguments": [
                  {
                    "id": 314,
                    "name": "_scheduleID",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 307,
                    "src": "3088:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  {
                    "expression": {
                      "id": 315,
                      "name": "ScheduleState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7,
                      "src": "3101:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_ScheduleState_$7_$",
                        "typeString": "type(enum freelancer.ScheduleState)"
                      }
                    },
                    "id": 316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "planned",
                    "nodeType": "MemberAccess",
                    "src": "3101:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ScheduleState_$7",
                      "typeString": "enum freelancer.ScheduleState"
                    }
                  }
                ],
                "id": 317,
                "modifierName": {
                  "id": 313,
                  "name": "inScheduleState",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 130,
                  "src": "3072:15:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "3072:51:0"
              },
              {
                "arguments": [
                  {
                    "id": 319,
                    "name": "_scheduleID",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 307,
                    "src": "3146:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  {
                    "expression": {
                      "id": 320,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "3159:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 321,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "value",
                    "nodeType": "MemberAccess",
                    "src": "3159:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 322,
                "modifierName": {
                  "id": 318,
                  "name": "ampleFunding",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 147,
                  "src": "3133:12:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "3133:36:0"
              },
              {
                "id": 324,
                "modifierName": {
                  "id": 323,
                  "name": "onlyClient",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 76,
                  "src": "3179:10:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "3179:10:0"
              }
            ],
            "name": "fundTask",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 308,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 307,
                  "mutability": "mutable",
                  "name": "_scheduleID",
                  "nodeType": "VariableDeclaration",
                  "scope": 339,
                  "src": "2963:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 306,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2963:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2962:20:0"
            },
            "returnParameters": {
              "id": 325,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3195:0:0"
            },
            "scope": 492,
            "src": "2945:374:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 376,
              "nodeType": "Block",
              "src": "3542:189:0",
              "statements": [
                {
                  "expression": {
                    "id": 363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 357,
                          "name": "scheduleRegister",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44,
                          "src": "3553:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_int256_$_t_struct$_schedule_$25_storage_$",
                            "typeString": "mapping(int256 => struct freelancer.schedule storage ref)"
                          }
                        },
                        "id": 359,
                        "indexExpression": {
                          "id": 358,
                          "name": "_scheduleID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 341,
                          "src": "3570:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3553:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_schedule_$25_storage",
                          "typeString": "struct freelancer.schedule storage ref"
                        }
                      },
                      "id": 360,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "scheduleState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24,
                      "src": "3553:43:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ScheduleState_$7",
                        "typeString": "enum freelancer.ScheduleState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 361,
                        "name": "ScheduleState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "3599:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_ScheduleState_$7_$",
                          "typeString": "type(enum freelancer.ScheduleState)"
                        }
                      },
                      "id": 362,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "started",
                      "nodeType": "MemberAccess",
                      "src": "3599:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ScheduleState_$7",
                        "typeString": "enum freelancer.ScheduleState"
                      }
                    },
                    "src": "3553:67:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ScheduleState_$7",
                      "typeString": "enum freelancer.ScheduleState"
                    }
                  },
                  "id": 364,
                  "nodeType": "ExpressionStatement",
                  "src": "3553:67:0"
                },
                {
                  "expression": {
                    "id": 370,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 365,
                          "name": "scheduleRegister",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44,
                          "src": "3631:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_int256_$_t_struct$_schedule_$25_storage_$",
                            "typeString": "mapping(int256 => struct freelancer.schedule storage ref)"
                          }
                        },
                        "id": 367,
                        "indexExpression": {
                          "id": 366,
                          "name": "_scheduleID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 341,
                          "src": "3648:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3631:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_schedule_$25_storage",
                          "typeString": "struct freelancer.schedule storage ref"
                        }
                      },
                      "id": 368,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "startDate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19,
                      "src": "3631:39:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 369,
                      "name": "_startDate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 343,
                      "src": "3673:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3631:52:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 371,
                  "nodeType": "ExpressionStatement",
                  "src": "3631:52:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 373,
                        "name": "_scheduleID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 341,
                        "src": "3711:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "id": 372,
                      "name": "taskStarted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 177,
                      "src": "3699:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_int256_$returns$__$",
                        "typeString": "function (int256)"
                      }
                    },
                    "id": 374,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3699:24:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 375,
                  "nodeType": "EmitStatement",
                  "src": "3694:29:0"
                }
              ]
            },
            "functionSelector": "4570078f",
            "id": 377,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 346,
                      "name": "ProjectState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "3430:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_ProjectState_$11_$",
                        "typeString": "type(enum freelancer.ProjectState)"
                      }
                    },
                    "id": 347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "accepted",
                    "nodeType": "MemberAccess",
                    "src": "3430:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ProjectState_$11",
                      "typeString": "enum freelancer.ProjectState"
                    }
                  }
                ],
                "id": 348,
                "modifierName": {
                  "id": 345,
                  "name": "inProjectState",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 105,
                  "src": "3415:14:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "3415:37:0"
              },
              {
                "arguments": [
                  {
                    "id": 350,
                    "name": "_scheduleID",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 341,
                    "src": "3478:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  {
                    "expression": {
                      "id": 351,
                      "name": "ScheduleState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7,
                      "src": "3491:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_ScheduleState_$7_$",
                        "typeString": "type(enum freelancer.ScheduleState)"
                      }
                    },
                    "id": 352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "funded",
                    "nodeType": "MemberAccess",
                    "src": "3491:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ScheduleState_$7",
                      "typeString": "enum freelancer.ScheduleState"
                    }
                  }
                ],
                "id": 353,
                "modifierName": {
                  "id": 349,
                  "name": "inScheduleState",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 130,
                  "src": "3462:15:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "3462:50:0"
              },
              {
                "id": 355,
                "modifierName": {
                  "id": 354,
                  "name": "onlyFreelancer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 65,
                  "src": "3522:14:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "3522:14:0"
              }
            ],
            "name": "startTask",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 344,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 341,
                  "mutability": "mutable",
                  "name": "_scheduleID",
                  "nodeType": "VariableDeclaration",
                  "scope": 377,
                  "src": "3350:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 340,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3350:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 343,
                  "mutability": "mutable",
                  "name": "_startDate",
                  "nodeType": "VariableDeclaration",
                  "scope": 377,
                  "src": "3370:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 342,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3370:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3349:40:0"
            },
            "returnParameters": {
              "id": 356,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3542:0:0"
            },
            "scope": 492,
            "src": "3331:400:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 414,
              "nodeType": "Block",
              "src": "3947:187:0",
              "statements": [
                {
                  "expression": {
                    "id": 401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 395,
                          "name": "scheduleRegister",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44,
                          "src": "3958:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_int256_$_t_struct$_schedule_$25_storage_$",
                            "typeString": "mapping(int256 => struct freelancer.schedule storage ref)"
                          }
                        },
                        "id": 397,
                        "indexExpression": {
                          "id": 396,
                          "name": "_scheduleID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 379,
                          "src": "3975:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3958:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_schedule_$25_storage",
                          "typeString": "struct freelancer.schedule storage ref"
                        }
                      },
                      "id": 398,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "scheduleState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24,
                      "src": "3958:43:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ScheduleState_$7",
                        "typeString": "enum freelancer.ScheduleState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 399,
                        "name": "ScheduleState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "4004:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_ScheduleState_$7_$",
                          "typeString": "type(enum freelancer.ScheduleState)"
                        }
                      },
                      "id": 400,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "approved",
                      "nodeType": "MemberAccess",
                      "src": "4004:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ScheduleState_$7",
                        "typeString": "enum freelancer.ScheduleState"
                      }
                    },
                    "src": "3958:68:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ScheduleState_$7",
                      "typeString": "enum freelancer.ScheduleState"
                    }
                  },
                  "id": 402,
                  "nodeType": "ExpressionStatement",
                  "src": "3958:68:0"
                },
                {
                  "expression": {
                    "id": 408,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 403,
                          "name": "scheduleRegister",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44,
                          "src": "4037:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_int256_$_t_struct$_schedule_$25_storage_$",
                            "typeString": "mapping(int256 => struct freelancer.schedule storage ref)"
                          }
                        },
                        "id": 405,
                        "indexExpression": {
                          "id": 404,
                          "name": "_scheduleID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 379,
                          "src": "4054:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4037:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_schedule_$25_storage",
                          "typeString": "struct freelancer.schedule storage ref"
                        }
                      },
                      "id": 406,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "endDate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21,
                      "src": "4037:37:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 407,
                      "name": "_endDate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 381,
                      "src": "4077:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4037:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 409,
                  "nodeType": "ExpressionStatement",
                  "src": "4037:48:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 411,
                        "name": "_scheduleID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 379,
                        "src": "4114:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "id": 410,
                      "name": "taskApproved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 181,
                      "src": "4101:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_int256_$returns$__$",
                        "typeString": "function (int256)"
                      }
                    },
                    "id": 412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4101:25:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 413,
                  "nodeType": "EmitStatement",
                  "src": "4096:30:0"
                }
              ]
            },
            "functionSelector": "b92586c2",
            "id": 415,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 384,
                      "name": "ProjectState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "3838:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_ProjectState_$11_$",
                        "typeString": "type(enum freelancer.ProjectState)"
                      }
                    },
                    "id": 385,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "accepted",
                    "nodeType": "MemberAccess",
                    "src": "3838:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ProjectState_$11",
                      "typeString": "enum freelancer.ProjectState"
                    }
                  }
                ],
                "id": 386,
                "modifierName": {
                  "id": 383,
                  "name": "inProjectState",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 105,
                  "src": "3823:14:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "3823:37:0"
              },
              {
                "arguments": [
                  {
                    "id": 388,
                    "name": "_scheduleID",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 379,
                    "src": "3886:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  {
                    "expression": {
                      "id": 389,
                      "name": "ScheduleState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7,
                      "src": "3899:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_ScheduleState_$7_$",
                        "typeString": "type(enum freelancer.ScheduleState)"
                      }
                    },
                    "id": 390,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "started",
                    "nodeType": "MemberAccess",
                    "src": "3899:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ScheduleState_$7",
                      "typeString": "enum freelancer.ScheduleState"
                    }
                  }
                ],
                "id": 391,
                "modifierName": {
                  "id": 387,
                  "name": "inScheduleState",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 130,
                  "src": "3870:15:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "3870:51:0"
              },
              {
                "id": 393,
                "modifierName": {
                  "id": 392,
                  "name": "onlyClient",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 76,
                  "src": "3931:10:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "3931:10:0"
              }
            ],
            "name": "approveTask",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 382,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 379,
                  "mutability": "mutable",
                  "name": "_scheduleID",
                  "nodeType": "VariableDeclaration",
                  "scope": 415,
                  "src": "3760:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 378,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3760:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 381,
                  "mutability": "mutable",
                  "name": "_endDate",
                  "nodeType": "VariableDeclaration",
                  "scope": 415,
                  "src": "3780:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 380,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3780:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3759:38:0"
            },
            "returnParameters": {
              "id": 394,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3947:0:0"
            },
            "scope": 492,
            "src": "3739:395:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 456,
              "nodeType": "Block",
              "src": "4359:240:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 434,
                            "name": "scheduleRegister",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44,
                            "src": "4397:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_int256_$_t_struct$_schedule_$25_storage_$",
                              "typeString": "mapping(int256 => struct freelancer.schedule storage ref)"
                            }
                          },
                          "id": 436,
                          "indexExpression": {
                            "id": 435,
                            "name": "_scheduleID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 417,
                            "src": "4414:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4397:29:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_schedule_$25_storage",
                            "typeString": "struct freelancer.schedule storage ref"
                          }
                        },
                        "id": 437,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 17,
                        "src": "4397:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 431,
                        "name": "freelancerAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30,
                        "src": "4370:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 433,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "4370:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 438,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4370:63:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 439,
                  "nodeType": "ExpressionStatement",
                  "src": "4370:63:0"
                },
                {
                  "expression": {
                    "id": 446,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 440,
                          "name": "scheduleRegister",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44,
                          "src": "4444:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_int256_$_t_struct$_schedule_$25_storage_$",
                            "typeString": "mapping(int256 => struct freelancer.schedule storage ref)"
                          }
                        },
                        "id": 442,
                        "indexExpression": {
                          "id": 441,
                          "name": "_scheduleID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 417,
                          "src": "4461:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4444:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_schedule_$25_storage",
                          "typeString": "struct freelancer.schedule storage ref"
                        }
                      },
                      "id": 443,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "scheduleState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24,
                      "src": "4444:43:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ScheduleState_$7",
                        "typeString": "enum freelancer.ScheduleState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 444,
                        "name": "ScheduleState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "4490:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_ScheduleState_$7_$",
                          "typeString": "type(enum freelancer.ScheduleState)"
                        }
                      },
                      "id": 445,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "released",
                      "nodeType": "MemberAccess",
                      "src": "4490:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ScheduleState_$7",
                        "typeString": "enum freelancer.ScheduleState"
                      }
                    },
                    "src": "4444:68:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ScheduleState_$7",
                      "typeString": "enum freelancer.ScheduleState"
                    }
                  },
                  "id": 447,
                  "nodeType": "ExpressionStatement",
                  "src": "4444:68:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 449,
                        "name": "_scheduleID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 417,
                        "src": "4542:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 450,
                            "name": "scheduleRegister",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44,
                            "src": "4555:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_int256_$_t_struct$_schedule_$25_storage_$",
                              "typeString": "mapping(int256 => struct freelancer.schedule storage ref)"
                            }
                          },
                          "id": 452,
                          "indexExpression": {
                            "id": 451,
                            "name": "_scheduleID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 417,
                            "src": "4572:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4555:29:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_schedule_$25_storage",
                            "typeString": "struct freelancer.schedule storage ref"
                          }
                        },
                        "id": 453,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 17,
                        "src": "4555:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 448,
                      "name": "fundsReleased",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 187,
                      "src": "4528:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_int256_$_t_uint256_$returns$__$",
                        "typeString": "function (int256,uint256)"
                      }
                    },
                    "id": 454,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4528:63:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 455,
                  "nodeType": "EmitStatement",
                  "src": "4523:68:0"
                }
              ]
            },
            "functionSelector": "bb6fc950",
            "id": 457,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 420,
                      "name": "ProjectState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "4245:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_ProjectState_$11_$",
                        "typeString": "type(enum freelancer.ProjectState)"
                      }
                    },
                    "id": 421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "accepted",
                    "nodeType": "MemberAccess",
                    "src": "4245:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ProjectState_$11",
                      "typeString": "enum freelancer.ProjectState"
                    }
                  }
                ],
                "id": 422,
                "modifierName": {
                  "id": 419,
                  "name": "inProjectState",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 105,
                  "src": "4230:14:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "4230:37:0"
              },
              {
                "arguments": [
                  {
                    "id": 424,
                    "name": "_scheduleID",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 417,
                    "src": "4293:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  {
                    "expression": {
                      "id": 425,
                      "name": "ScheduleState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7,
                      "src": "4306:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_ScheduleState_$7_$",
                        "typeString": "type(enum freelancer.ScheduleState)"
                      }
                    },
                    "id": 426,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "approved",
                    "nodeType": "MemberAccess",
                    "src": "4306:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ScheduleState_$7",
                      "typeString": "enum freelancer.ScheduleState"
                    }
                  }
                ],
                "id": 427,
                "modifierName": {
                  "id": 423,
                  "name": "inScheduleState",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 130,
                  "src": "4277:15:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "4277:52:0"
              },
              {
                "id": 429,
                "modifierName": {
                  "id": 428,
                  "name": "onlyFreelancer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 65,
                  "src": "4339:14:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "4339:14:0"
              }
            ],
            "name": "releaseFunds",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 418,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 417,
                  "mutability": "mutable",
                  "name": "_scheduleID",
                  "nodeType": "VariableDeclaration",
                  "scope": 457,
                  "src": "4168:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 416,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4168:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4167:20:0"
            },
            "returnParameters": {
              "id": 430,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4359:0:0"
            },
            "scope": 492,
            "src": "4146:453:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 478,
              "nodeType": "Block",
              "src": "4721:112:0",
              "statements": [
                {
                  "expression": {
                    "id": 469,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 466,
                      "name": "projectState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "4732:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ProjectState_$11",
                        "typeString": "enum freelancer.ProjectState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 467,
                        "name": "ProjectState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "4747:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_ProjectState_$11_$",
                          "typeString": "type(enum freelancer.ProjectState)"
                        }
                      },
                      "id": 468,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "closed",
                      "nodeType": "MemberAccess",
                      "src": "4747:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ProjectState_$11",
                        "typeString": "enum freelancer.ProjectState"
                      }
                    },
                    "src": "4732:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ProjectState_$11",
                      "typeString": "enum freelancer.ProjectState"
                    }
                  },
                  "id": 470,
                  "nodeType": "ExpressionStatement",
                  "src": "4732:34:0"
                },
                {
                  "expression": {
                    "id": 473,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 471,
                      "name": "endDate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39,
                      "src": "4777:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 472,
                      "name": "_endDate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 459,
                      "src": "4787:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4777:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 474,
                  "nodeType": "ExpressionStatement",
                  "src": "4777:18:0"
                },
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 475,
                      "name": "projectEnded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 189,
                      "src": "4811:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 476,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4811:14:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 477,
                  "nodeType": "EmitStatement",
                  "src": "4806:19:0"
                }
              ]
            },
            "functionSelector": "744bc369",
            "id": 479,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 462,
                "modifierName": {
                  "id": 461,
                  "name": "bothClientFreelancer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 92,
                  "src": "4674:20:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "4674:20:0"
              },
              {
                "id": 464,
                "modifierName": {
                  "id": 463,
                  "name": "noMoreFunds",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 161,
                  "src": "4704:11:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "4704:11:0"
              }
            ],
            "name": "endProject",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 460,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 459,
                  "mutability": "mutable",
                  "name": "_endDate",
                  "nodeType": "VariableDeclaration",
                  "scope": 479,
                  "src": "4631:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 458,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4631:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4630:18:0"
            },
            "returnParameters": {
              "id": 465,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4721:0:0"
            },
            "scope": 492,
            "src": "4611:222:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 490,
              "nodeType": "Block",
              "src": "4937:47:0",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 486,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967268,
                          "src": "4963:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_freelancer_$492",
                            "typeString": "contract freelancer"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_freelancer_$492",
                            "typeString": "contract freelancer"
                          }
                        ],
                        "id": 485,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4955:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 484,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4955:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 487,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4955:13:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 488,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "4955:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 483,
                  "id": 489,
                  "nodeType": "Return",
                  "src": "4948:28:0"
                }
              ]
            },
            "functionSelector": "12065fe0",
            "id": 491,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 480,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4864:2:0"
            },
            "returnParameters": {
              "id": 483,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 482,
                  "mutability": "mutable",
                  "name": "balance",
                  "nodeType": "VariableDeclaration",
                  "scope": 491,
                  "src": "4915:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 481,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4915:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4914:17:0"
            },
            "scope": 492,
            "src": "4845:139:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 493,
        "src": "62:4925:0"
      }
    ],
    "src": "35:4953:0"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/Freelancer.sol",
    "exportedSymbols": {
      "freelancer": [
        492
      ]
    },
    "id": 493,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "35:23:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 492,
        "linearizedBaseContracts": [
          492
        ],
        "name": "freelancer",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "freelancer.ScheduleState",
            "id": 7,
            "members": [
              {
                "id": 2,
                "name": "planned",
                "nodeType": "EnumValue",
                "src": "114:7:0"
              },
              {
                "id": 3,
                "name": "funded",
                "nodeType": "EnumValue",
                "src": "123:6:0"
              },
              {
                "id": 4,
                "name": "started",
                "nodeType": "EnumValue",
                "src": "131:7:0"
              },
              {
                "id": 5,
                "name": "approved",
                "nodeType": "EnumValue",
                "src": "140:8:0"
              },
              {
                "id": 6,
                "name": "released",
                "nodeType": "EnumValue",
                "src": "150:8:0"
              }
            ],
            "name": "ScheduleState",
            "nodeType": "EnumDefinition",
            "src": "94:65:0"
          },
          {
            "canonicalName": "freelancer.ProjectState",
            "id": 11,
            "members": [
              {
                "id": 8,
                "name": "initiated",
                "nodeType": "EnumValue",
                "src": "184:9:0"
              },
              {
                "id": 9,
                "name": "accepted",
                "nodeType": "EnumValue",
                "src": "195:8:0"
              },
              {
                "id": 10,
                "name": "closed",
                "nodeType": "EnumValue",
                "src": "205:6:0"
              }
            ],
            "name": "ProjectState",
            "nodeType": "EnumDefinition",
            "src": "165:47:0"
          },
          {
            "canonicalName": "freelancer.schedule",
            "id": 25,
            "members": [
              {
                "constant": false,
                "id": 13,
                "mutability": "mutable",
                "name": "shortCode",
                "nodeType": "VariableDeclaration",
                "scope": 25,
                "src": "250:16:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 12,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "250:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 15,
                "mutability": "mutable",
                "name": "description",
                "nodeType": "VariableDeclaration",
                "scope": 25,
                "src": "277:18:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 14,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "277:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 17,
                "mutability": "mutable",
                "name": "value",
                "nodeType": "VariableDeclaration",
                "scope": 25,
                "src": "306:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 16,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "306:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 19,
                "mutability": "mutable",
                "name": "startDate",
                "nodeType": "VariableDeclaration",
                "scope": 25,
                "src": "330:17:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 18,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "330:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 21,
                "mutability": "mutable",
                "name": "endDate",
                "nodeType": "VariableDeclaration",
                "scope": 25,
                "src": "358:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 20,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "358:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 24,
                "mutability": "mutable",
                "name": "scheduleState",
                "nodeType": "VariableDeclaration",
                "scope": 25,
                "src": "384:27:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_ScheduleState_$7",
                  "typeString": "enum freelancer.ScheduleState"
                },
                "typeName": {
                  "id": 23,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 22,
                    "name": "ScheduleState",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 7,
                    "src": "384:13:0"
                  },
                  "referencedDeclaration": 7,
                  "src": "384:13:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_ScheduleState_$7",
                    "typeString": "enum freelancer.ScheduleState"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "schedule",
            "nodeType": "StructDefinition",
            "scope": 492,
            "src": "224:195:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "965720af",
            "id": 28,
            "mutability": "mutable",
            "name": "totalSchedules",
            "nodeType": "VariableDeclaration",
            "scope": 492,
            "src": "431:32:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_int256",
              "typeString": "int256"
            },
            "typeName": {
              "id": 26,
              "name": "int256",
              "nodeType": "ElementaryTypeName",
              "src": "431:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_int256",
                "typeString": "int256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 27,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "462:1:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "06a4e7cb",
            "id": 30,
            "mutability": "mutable",
            "name": "freelancerAddress",
            "nodeType": "VariableDeclaration",
            "scope": 492,
            "src": "470:40:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 29,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "470:15:0",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2c2ab5ea",
            "id": 32,
            "mutability": "mutable",
            "name": "clientAddress",
            "nodeType": "VariableDeclaration",
            "scope": 492,
            "src": "517:28:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 31,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "517:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "748807ab",
            "id": 35,
            "mutability": "mutable",
            "name": "projectState",
            "nodeType": "VariableDeclaration",
            "scope": 492,
            "src": "552:32:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_ProjectState_$11",
              "typeString": "enum freelancer.ProjectState"
            },
            "typeName": {
              "id": 34,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 33,
                "name": "ProjectState",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 11,
                "src": "552:12:0"
              },
              "referencedDeclaration": 11,
              "src": "552:12:0",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_ProjectState_$11",
                "typeString": "enum freelancer.ProjectState"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "0b97bc86",
            "id": 37,
            "mutability": "mutable",
            "name": "startDate",
            "nodeType": "VariableDeclaration",
            "scope": 492,
            "src": "591:24:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 36,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "591:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c24a0f8b",
            "id": 39,
            "mutability": "mutable",
            "name": "endDate",
            "nodeType": "VariableDeclaration",
            "scope": 492,
            "src": "622:22:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 38,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "622:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "bab56910",
            "id": 44,
            "mutability": "mutable",
            "name": "scheduleRegister",
            "nodeType": "VariableDeclaration",
            "scope": 492,
            "src": "657:51:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_int256_$_t_struct$_schedule_$25_storage_$",
              "typeString": "mapping(int256 => struct freelancer.schedule)"
            },
            "typeName": {
              "id": 43,
              "keyType": {
                "id": 40,
                "name": "int256",
                "nodeType": "ElementaryTypeName",
                "src": "665:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_int256",
                  "typeString": "int256"
                }
              },
              "nodeType": "Mapping",
              "src": "657:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_int256_$_t_struct$_schedule_$25_storage_$",
                "typeString": "mapping(int256 => struct freelancer.schedule)"
              },
              "valueType": {
                "id": 42,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 41,
                  "name": "schedule",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 25,
                  "src": "675:8:0"
                },
                "referencedDeclaration": 25,
                "src": "675:8:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_schedule_$25_storage_ptr",
                  "typeString": "struct freelancer.schedule"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 53,
              "nodeType": "Block",
              "src": "752:35:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 49,
                        "name": "_condition",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46,
                        "src": "765:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 48,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "757:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 50,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "757:19:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51,
                  "nodeType": "ExpressionStatement",
                  "src": "757:19:0"
                },
                {
                  "id": 52,
                  "nodeType": "PlaceholderStatement",
                  "src": "781:1:0"
                }
              ]
            },
            "id": 54,
            "name": "condition",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 47,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46,
                  "mutability": "mutable",
                  "name": "_condition",
                  "nodeType": "VariableDeclaration",
                  "scope": 54,
                  "src": "735:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 45,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "735:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "734:17:0"
            },
            "src": "716:71:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 64,
              "nodeType": "Block",
              "src": "818:56:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 60,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 57,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "831:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 58,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "831:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 59,
                          "name": "freelancerAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30,
                          "src": "845:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "831:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 56,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "823:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 61,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "823:40:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 62,
                  "nodeType": "ExpressionStatement",
                  "src": "823:40:0"
                },
                {
                  "id": 63,
                  "nodeType": "PlaceholderStatement",
                  "src": "868:1:0"
                }
              ]
            },
            "id": 65,
            "name": "onlyFreelancer",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 55,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "815:2:0"
            },
            "src": "792:82:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 75,
              "nodeType": "Block",
              "src": "901:52:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 71,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 68,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "914:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 69,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "914:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 70,
                          "name": "clientAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32,
                          "src": "928:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "914:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 67,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "906:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 72,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "906:36:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73,
                  "nodeType": "ExpressionStatement",
                  "src": "906:36:0"
                },
                {
                  "id": 74,
                  "nodeType": "PlaceholderStatement",
                  "src": "947:1:0"
                }
              ]
            },
            "id": 76,
            "name": "onlyClient",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 66,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "898:2:0"
            },
            "src": "879:74:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 91,
              "nodeType": "Block",
              "src": "990:92:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 87,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 82,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 79,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1003:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 80,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1003:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 81,
                            "name": "clientAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32,
                            "src": "1017:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1003:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 86,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 83,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1034:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 84,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1034:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 85,
                            "name": "freelancerAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30,
                            "src": "1048:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "1034:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1003:62:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 78,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "995:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 88,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "995:71:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89,
                  "nodeType": "ExpressionStatement",
                  "src": "995:71:0"
                },
                {
                  "id": 90,
                  "nodeType": "PlaceholderStatement",
                  "src": "1071:1:0"
                }
              ]
            },
            "id": 92,
            "name": "bothClientFreelancer",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 77,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "988:2:0"
            },
            "src": "959:123:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 104,
              "nodeType": "Block",
              "src": "1132:47:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_ProjectState_$11",
                          "typeString": "enum freelancer.ProjectState"
                        },
                        "id": 100,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 98,
                          "name": "projectState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35,
                          "src": "1145:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ProjectState_$11",
                            "typeString": "enum freelancer.ProjectState"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 99,
                          "name": "_state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 95,
                          "src": "1161:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ProjectState_$11",
                            "typeString": "enum freelancer.ProjectState"
                          }
                        },
                        "src": "1145:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 97,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1137:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1137:31:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102,
                  "nodeType": "ExpressionStatement",
                  "src": "1137:31:0"
                },
                {
                  "id": 103,
                  "nodeType": "PlaceholderStatement",
                  "src": "1173:1:0"
                }
              ]
            },
            "id": 105,
            "name": "inProjectState",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 96,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 95,
                  "mutability": "mutable",
                  "name": "_state",
                  "nodeType": "VariableDeclaration",
                  "scope": 105,
                  "src": "1111:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_ProjectState_$11",
                    "typeString": "enum freelancer.ProjectState"
                  },
                  "typeName": {
                    "id": 94,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 93,
                      "name": "ProjectState",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 11,
                      "src": "1111:12:0"
                    },
                    "referencedDeclaration": 11,
                    "src": "1111:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ProjectState_$11",
                      "typeString": "enum freelancer.ProjectState"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1110:21:0"
            },
            "src": "1087:92:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 129,
              "nodeType": "Block",
              "src": "1253:132:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              },
                              "id": 117,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 113,
                                "name": "_scheduleID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 107,
                                "src": "1273:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                },
                                "id": 116,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 114,
                                  "name": "totalSchedules",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 28,
                                  "src": "1288:14:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "hexValue": "31",
                                  "id": 115,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1305:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "1288:18:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              "src": "1273:33:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 118,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "1272:35:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_ScheduleState_$7",
                            "typeString": "enum freelancer.ScheduleState"
                          },
                          "id": 124,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 119,
                                "name": "scheduleRegister",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 44,
                                "src": "1311:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_int256_$_t_struct$_schedule_$25_storage_$",
                                  "typeString": "mapping(int256 => struct freelancer.schedule storage ref)"
                                }
                              },
                              "id": 121,
                              "indexExpression": {
                                "id": 120,
                                "name": "_scheduleID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 107,
                                "src": "1328:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1311:29:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_schedule_$25_storage",
                                "typeString": "struct freelancer.schedule storage ref"
                              }
                            },
                            "id": 122,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "scheduleState",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24,
                            "src": "1311:43:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ScheduleState_$7",
                              "typeString": "enum freelancer.ScheduleState"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 123,
                            "name": "_state",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 110,
                            "src": "1358:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ScheduleState_$7",
                              "typeString": "enum freelancer.ScheduleState"
                            }
                          },
                          "src": "1311:53:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1272:92:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 112,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1264:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1264:101:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 127,
                  "nodeType": "ExpressionStatement",
                  "src": "1264:101:0"
                },
                {
                  "id": 128,
                  "nodeType": "PlaceholderStatement",
                  "src": "1376:1:0"
                }
              ]
            },
            "id": 130,
            "name": "inScheduleState",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 111,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 107,
                  "mutability": "mutable",
                  "name": "_scheduleID",
                  "nodeType": "VariableDeclaration",
                  "scope": 130,
                  "src": "1212:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 106,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1212:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 110,
                  "mutability": "mutable",
                  "name": "_state",
                  "nodeType": "VariableDeclaration",
                  "scope": 130,
                  "src": "1232:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_ScheduleState_$7",
                    "typeString": "enum freelancer.ScheduleState"
                  },
                  "typeName": {
                    "id": 109,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 108,
                      "name": "ScheduleState",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7,
                      "src": "1232:13:0"
                    },
                    "referencedDeclaration": 7,
                    "src": "1232:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ScheduleState_$7",
                      "typeString": "enum freelancer.ScheduleState"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1211:42:0"
            },
            "src": "1187:198:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 146,
              "nodeType": "Block",
              "src": "1452:87:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 137,
                              "name": "scheduleRegister",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44,
                              "src": "1471:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_int256_$_t_struct$_schedule_$25_storage_$",
                                "typeString": "mapping(int256 => struct freelancer.schedule storage ref)"
                              }
                            },
                            "id": 139,
                            "indexExpression": {
                              "id": 138,
                              "name": "_scheduleID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 132,
                              "src": "1488:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1471:29:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_schedule_$25_storage",
                              "typeString": "struct freelancer.schedule storage ref"
                            }
                          },
                          "id": 140,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17,
                          "src": "1471:35:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 141,
                          "name": "_funding",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 134,
                          "src": "1510:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1471:47:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 136,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1463:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1463:56:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 144,
                  "nodeType": "ExpressionStatement",
                  "src": "1463:56:0"
                },
                {
                  "id": 145,
                  "nodeType": "PlaceholderStatement",
                  "src": "1530:1:0"
                }
              ]
            },
            "id": 147,
            "name": "ampleFunding",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 135,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 132,
                  "mutability": "mutable",
                  "name": "_scheduleID",
                  "nodeType": "VariableDeclaration",
                  "scope": 147,
                  "src": "1415:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 131,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1415:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 134,
                  "mutability": "mutable",
                  "name": "_funding",
                  "nodeType": "VariableDeclaration",
                  "scope": 147,
                  "src": "1435:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 133,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1435:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1414:38:0"
            },
            "src": "1393:146:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 160,
              "nodeType": "Block",
              "src": "1569:66:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 156,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 152,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "1596:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_freelancer_$492",
                                  "typeString": "contract freelancer"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_freelancer_$492",
                                  "typeString": "contract freelancer"
                                }
                              ],
                              "id": 151,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1588:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 150,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1588:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 153,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1588:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 154,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "1588:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 155,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1613:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1588:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 149,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1580:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1580:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 158,
                  "nodeType": "ExpressionStatement",
                  "src": "1580:35:0"
                },
                {
                  "id": 159,
                  "nodeType": "PlaceholderStatement",
                  "src": "1626:1:0"
                }
              ]
            },
            "id": 161,
            "name": "noMoreFunds",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 148,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1567:2:0"
            },
            "src": "1547:88:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "id": 165,
            "name": "scheduleAdded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 164,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 163,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "shortCode",
                  "nodeType": "VariableDeclaration",
                  "scope": 165,
                  "src": "1663:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 162,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1663:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1662:18:0"
            },
            "src": "1643:38:0"
          },
          {
            "anonymous": false,
            "id": 169,
            "name": "projectAccepted",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 168,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 167,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "clientAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 169,
                  "src": "1709:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 166,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1709:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1708:23:0"
            },
            "src": "1687:45:0"
          },
          {
            "anonymous": false,
            "id": 173,
            "name": "taskFunded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 172,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 171,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "scheduleID",
                  "nodeType": "VariableDeclaration",
                  "scope": 173,
                  "src": "1755:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 170,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1755:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1754:19:0"
            },
            "src": "1738:36:0"
          },
          {
            "anonymous": false,
            "id": 177,
            "name": "taskStarted",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 176,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 175,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "scheduleID",
                  "nodeType": "VariableDeclaration",
                  "scope": 177,
                  "src": "1798:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 174,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1798:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1797:19:0"
            },
            "src": "1780:37:0"
          },
          {
            "anonymous": false,
            "id": 181,
            "name": "taskApproved",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 180,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 179,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "scheduleID",
                  "nodeType": "VariableDeclaration",
                  "scope": 181,
                  "src": "1842:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 178,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1842:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1841:19:0"
            },
            "src": "1823:38:0"
          },
          {
            "anonymous": false,
            "id": 187,
            "name": "fundsReleased",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 186,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 183,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "scheduleID",
                  "nodeType": "VariableDeclaration",
                  "scope": 187,
                  "src": "1887:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 182,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1887:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 185,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "valueReleased",
                  "nodeType": "VariableDeclaration",
                  "scope": 187,
                  "src": "1906:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 184,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1906:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1886:42:0"
            },
            "src": "1867:62:0"
          },
          {
            "anonymous": false,
            "id": 189,
            "name": "projectEnded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 188,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1953:2:0"
            },
            "src": "1935:21:0"
          },
          {
            "body": {
              "id": 205,
              "nodeType": "Block",
              "src": "1987:106:0",
              "statements": [
                {
                  "expression": {
                    "id": 198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 192,
                      "name": "freelancerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30,
                      "src": "1998:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 195,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2026:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 196,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2026:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 194,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2018:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 193,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2018:8:0",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 197,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2018:19:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1998:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 199,
                  "nodeType": "ExpressionStatement",
                  "src": "1998:39:0"
                },
                {
                  "expression": {
                    "id": 203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 200,
                      "name": "projectState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "2048:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ProjectState_$11",
                        "typeString": "enum freelancer.ProjectState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 201,
                        "name": "ProjectState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "2063:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_ProjectState_$11_$",
                          "typeString": "type(enum freelancer.ProjectState)"
                        }
                      },
                      "id": 202,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "initiated",
                      "nodeType": "MemberAccess",
                      "src": "2063:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ProjectState_$11",
                        "typeString": "enum freelancer.ProjectState"
                      }
                    },
                    "src": "2048:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ProjectState_$11",
                      "typeString": "enum freelancer.ProjectState"
                    }
                  },
                  "id": 204,
                  "nodeType": "ExpressionStatement",
                  "src": "2048:37:0"
                }
              ]
            },
            "id": 206,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 190,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1979:2:0"
            },
            "returnParameters": {
              "id": 191,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1987:0:0"
            },
            "scope": 492,
            "src": "1968:125:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 275,
              "nodeType": "Block",
              "src": "2289:352:0",
              "statements": [
                {
                  "assignments": [
                    223
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 223,
                      "mutability": "mutable",
                      "name": "s",
                      "nodeType": "VariableDeclaration",
                      "scope": 275,
                      "src": "2300:17:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_schedule_$25_memory_ptr",
                        "typeString": "struct freelancer.schedule"
                      },
                      "typeName": {
                        "id": 222,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 221,
                          "name": "schedule",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 25,
                          "src": "2300:8:0"
                        },
                        "referencedDeclaration": 25,
                        "src": "2300:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_schedule_$25_storage_ptr",
                          "typeString": "struct freelancer.schedule"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 224,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2300:17:0"
                },
                {
                  "expression": {
                    "id": 229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 225,
                        "name": "s",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 223,
                        "src": "2328:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_schedule_$25_memory_ptr",
                          "typeString": "struct freelancer.schedule memory"
                        }
                      },
                      "id": 227,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "shortCode",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13,
                      "src": "2328:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 228,
                      "name": "_shortCode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 208,
                      "src": "2342:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2328:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 230,
                  "nodeType": "ExpressionStatement",
                  "src": "2328:24:0"
                },
                {
                  "expression": {
                    "id": 235,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 231,
                        "name": "s",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 223,
                        "src": "2363:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_schedule_$25_memory_ptr",
                          "typeString": "struct freelancer.schedule memory"
                        }
                      },
                      "id": 233,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "description",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15,
                      "src": "2363:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 234,
                      "name": "_description",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 210,
                      "src": "2379:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2363:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 236,
                  "nodeType": "ExpressionStatement",
                  "src": "2363:28:0"
                },
                {
                  "expression": {
                    "id": 242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 237,
                        "name": "s",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 223,
                        "src": "2402:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_schedule_$25_memory_ptr",
                          "typeString": "struct freelancer.schedule memory"
                        }
                      },
                      "id": 239,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "scheduleState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24,
                      "src": "2402:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ScheduleState_$7",
                        "typeString": "enum freelancer.ScheduleState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 240,
                        "name": "ScheduleState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "2420:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_ScheduleState_$7_$",
                          "typeString": "type(enum freelancer.ScheduleState)"
                        }
                      },
                      "id": 241,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "planned",
                      "nodeType": "MemberAccess",
                      "src": "2420:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ScheduleState_$7",
                        "typeString": "enum freelancer.ScheduleState"
                      }
                    },
                    "src": "2402:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ScheduleState_$7",
                      "typeString": "enum freelancer.ScheduleState"
                    }
                  },
                  "id": 243,
                  "nodeType": "ExpressionStatement",
                  "src": "2402:39:0"
                },
                {
                  "expression": {
                    "id": 248,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 244,
                        "name": "s",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 223,
                        "src": "2452:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_schedule_$25_memory_ptr",
                          "typeString": "struct freelancer.schedule memory"
                        }
                      },
                      "id": 246,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17,
                      "src": "2452:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 247,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 212,
                      "src": "2462:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2452:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 249,
                  "nodeType": "ExpressionStatement",
                  "src": "2452:16:0"
                },
                {
                  "expression": {
                    "id": 254,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 250,
                        "name": "s",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 223,
                        "src": "2479:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_schedule_$25_memory_ptr",
                          "typeString": "struct freelancer.schedule memory"
                        }
                      },
                      "id": 252,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "startDate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19,
                      "src": "2479:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 253,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2493:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2479:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 255,
                  "nodeType": "ExpressionStatement",
                  "src": "2479:15:0"
                },
                {
                  "expression": {
                    "id": 260,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 256,
                        "name": "s",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 223,
                        "src": "2505:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_schedule_$25_memory_ptr",
                          "typeString": "struct freelancer.schedule memory"
                        }
                      },
                      "id": 258,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "endDate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21,
                      "src": "2505:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 259,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2517:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2505:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 261,
                  "nodeType": "ExpressionStatement",
                  "src": "2505:13:0"
                },
                {
                  "expression": {
                    "id": 266,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 262,
                        "name": "scheduleRegister",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "2529:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_int256_$_t_struct$_schedule_$25_storage_$",
                          "typeString": "mapping(int256 => struct freelancer.schedule storage ref)"
                        }
                      },
                      "id": 264,
                      "indexExpression": {
                        "id": 263,
                        "name": "totalSchedules",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28,
                        "src": "2546:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2529:32:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_schedule_$25_storage",
                        "typeString": "struct freelancer.schedule storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 265,
                      "name": "s",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 223,
                      "src": "2564:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_schedule_$25_memory_ptr",
                        "typeString": "struct freelancer.schedule memory"
                      }
                    },
                    "src": "2529:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_schedule_$25_storage",
                      "typeString": "struct freelancer.schedule storage ref"
                    }
                  },
                  "id": 267,
                  "nodeType": "ExpressionStatement",
                  "src": "2529:36:0"
                },
                {
                  "expression": {
                    "id": 269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "2576:16:0",
                    "subExpression": {
                      "id": 268,
                      "name": "totalSchedules",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28,
                      "src": "2576:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "id": 270,
                  "nodeType": "ExpressionStatement",
                  "src": "2576:16:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 272,
                        "name": "_shortCode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 208,
                        "src": "2622:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 271,
                      "name": "scheduleAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 165,
                      "src": "2608:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2608:25:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 274,
                  "nodeType": "EmitStatement",
                  "src": "2603:30:0"
                }
              ]
            },
            "functionSelector": "84bf66ac",
            "id": 276,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 215,
                      "name": "ProjectState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "2236:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_ProjectState_$11_$",
                        "typeString": "type(enum freelancer.ProjectState)"
                      }
                    },
                    "id": 216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "initiated",
                    "nodeType": "MemberAccess",
                    "src": "2236:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ProjectState_$11",
                      "typeString": "enum freelancer.ProjectState"
                    }
                  }
                ],
                "id": 217,
                "modifierName": {
                  "id": 214,
                  "name": "inProjectState",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 105,
                  "src": "2221:14:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2221:38:0"
              },
              {
                "id": 219,
                "modifierName": {
                  "id": 218,
                  "name": "onlyFreelancer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 65,
                  "src": "2269:14:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2269:14:0"
              }
            ],
            "name": "addSchedule",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 213,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 208,
                  "mutability": "mutable",
                  "name": "_shortCode",
                  "nodeType": "VariableDeclaration",
                  "scope": 276,
                  "src": "2126:24:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 207,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2126:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 210,
                  "mutability": "mutable",
                  "name": "_description",
                  "nodeType": "VariableDeclaration",
                  "scope": 276,
                  "src": "2152:26:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 209,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2152:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 212,
                  "mutability": "mutable",
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 276,
                  "src": "2180:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 211,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2180:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2125:70:0"
            },
            "returnParameters": {
              "id": 220,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2289:0:0"
            },
            "scope": 492,
            "src": "2105:536:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 304,
              "nodeType": "Block",
              "src": "2765:168:0",
              "statements": [
                {
                  "expression": {
                    "id": 288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 285,
                      "name": "clientAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32,
                      "src": "2776:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 286,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "2792:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 287,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2792:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2776:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 289,
                  "nodeType": "ExpressionStatement",
                  "src": "2776:26:0"
                },
                {
                  "expression": {
                    "id": 293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 290,
                      "name": "projectState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "2813:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ProjectState_$11",
                        "typeString": "enum freelancer.ProjectState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 291,
                        "name": "ProjectState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "2828:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_ProjectState_$11_$",
                          "typeString": "type(enum freelancer.ProjectState)"
                        }
                      },
                      "id": 292,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "accepted",
                      "nodeType": "MemberAccess",
                      "src": "2828:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ProjectState_$11",
                        "typeString": "enum freelancer.ProjectState"
                      }
                    },
                    "src": "2813:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ProjectState_$11",
                      "typeString": "enum freelancer.ProjectState"
                    }
                  },
                  "id": 294,
                  "nodeType": "ExpressionStatement",
                  "src": "2813:36:0"
                },
                {
                  "expression": {
                    "id": 297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 295,
                      "name": "startDate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37,
                      "src": "2860:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 296,
                      "name": "_startDate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 278,
                      "src": "2872:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2860:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 298,
                  "nodeType": "ExpressionStatement",
                  "src": "2860:22:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 300,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2914:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 301,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2914:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 299,
                      "name": "projectAccepted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 169,
                      "src": "2898:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2898:27:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 303,
                  "nodeType": "EmitStatement",
                  "src": "2893:32:0"
                }
              ]
            },
            "functionSelector": "fd1d5ea9",
            "id": 305,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 281,
                      "name": "ProjectState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "2736:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_ProjectState_$11_$",
                        "typeString": "type(enum freelancer.ProjectState)"
                      }
                    },
                    "id": 282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "initiated",
                    "nodeType": "MemberAccess",
                    "src": "2736:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ProjectState_$11",
                      "typeString": "enum freelancer.ProjectState"
                    }
                  }
                ],
                "id": 283,
                "modifierName": {
                  "id": 280,
                  "name": "inProjectState",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 105,
                  "src": "2721:14:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2721:38:0"
              }
            ],
            "name": "acceptProject",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 279,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 278,
                  "mutability": "mutable",
                  "name": "_startDate",
                  "nodeType": "VariableDeclaration",
                  "scope": 305,
                  "src": "2676:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 277,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2676:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2675:20:0"
            },
            "returnParameters": {
              "id": 284,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2765:0:0"
            },
            "scope": 492,
            "src": "2653:280:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 338,
              "nodeType": "Block",
              "src": "3195:124:0",
              "statements": [
                {
                  "expression": {
                    "id": 332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 326,
                          "name": "scheduleRegister",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44,
                          "src": "3206:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_int256_$_t_struct$_schedule_$25_storage_$",
                            "typeString": "mapping(int256 => struct freelancer.schedule storage ref)"
                          }
                        },
                        "id": 328,
                        "indexExpression": {
                          "id": 327,
                          "name": "_scheduleID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 307,
                          "src": "3223:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3206:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_schedule_$25_storage",
                          "typeString": "struct freelancer.schedule storage ref"
                        }
                      },
                      "id": 329,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "scheduleState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24,
                      "src": "3206:43:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ScheduleState_$7",
                        "typeString": "enum freelancer.ScheduleState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 330,
                        "name": "ScheduleState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "3252:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_ScheduleState_$7_$",
                          "typeString": "type(enum freelancer.ScheduleState)"
                        }
                      },
                      "id": 331,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "funded",
                      "nodeType": "MemberAccess",
                      "src": "3252:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ScheduleState_$7",
                        "typeString": "enum freelancer.ScheduleState"
                      }
                    },
                    "src": "3206:66:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ScheduleState_$7",
                      "typeString": "enum freelancer.ScheduleState"
                    }
                  },
                  "id": 333,
                  "nodeType": "ExpressionStatement",
                  "src": "3206:66:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 335,
                        "name": "_scheduleID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 307,
                        "src": "3299:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "id": 334,
                      "name": "taskFunded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 173,
                      "src": "3288:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_int256_$returns$__$",
                        "typeString": "function (int256)"
                      }
                    },
                    "id": 336,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3288:23:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 337,
                  "nodeType": "EmitStatement",
                  "src": "3283:28:0"
                }
              ]
            },
            "functionSelector": "054f84ed",
            "id": 339,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 310,
                      "name": "ProjectState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "3040:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_ProjectState_$11_$",
                        "typeString": "type(enum freelancer.ProjectState)"
                      }
                    },
                    "id": 311,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "accepted",
                    "nodeType": "MemberAccess",
                    "src": "3040:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ProjectState_$11",
                      "typeString": "enum freelancer.ProjectState"
                    }
                  }
                ],
                "id": 312,
                "modifierName": {
                  "id": 309,
                  "name": "inProjectState",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 105,
                  "src": "3025:14:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "3025:37:0"
              },
              {
                "arguments": [
                  {
                    "id": 314,
                    "name": "_scheduleID",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 307,
                    "src": "3088:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  {
                    "expression": {
                      "id": 315,
                      "name": "ScheduleState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7,
                      "src": "3101:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_ScheduleState_$7_$",
                        "typeString": "type(enum freelancer.ScheduleState)"
                      }
                    },
                    "id": 316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "planned",
                    "nodeType": "MemberAccess",
                    "src": "3101:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ScheduleState_$7",
                      "typeString": "enum freelancer.ScheduleState"
                    }
                  }
                ],
                "id": 317,
                "modifierName": {
                  "id": 313,
                  "name": "inScheduleState",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 130,
                  "src": "3072:15:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "3072:51:0"
              },
              {
                "arguments": [
                  {
                    "id": 319,
                    "name": "_scheduleID",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 307,
                    "src": "3146:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  {
                    "expression": {
                      "id": 320,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "3159:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 321,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "value",
                    "nodeType": "MemberAccess",
                    "src": "3159:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 322,
                "modifierName": {
                  "id": 318,
                  "name": "ampleFunding",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 147,
                  "src": "3133:12:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "3133:36:0"
              },
              {
                "id": 324,
                "modifierName": {
                  "id": 323,
                  "name": "onlyClient",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 76,
                  "src": "3179:10:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "3179:10:0"
              }
            ],
            "name": "fundTask",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 308,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 307,
                  "mutability": "mutable",
                  "name": "_scheduleID",
                  "nodeType": "VariableDeclaration",
                  "scope": 339,
                  "src": "2963:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 306,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2963:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2962:20:0"
            },
            "returnParameters": {
              "id": 325,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3195:0:0"
            },
            "scope": 492,
            "src": "2945:374:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 376,
              "nodeType": "Block",
              "src": "3542:189:0",
              "statements": [
                {
                  "expression": {
                    "id": 363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 357,
                          "name": "scheduleRegister",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44,
                          "src": "3553:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_int256_$_t_struct$_schedule_$25_storage_$",
                            "typeString": "mapping(int256 => struct freelancer.schedule storage ref)"
                          }
                        },
                        "id": 359,
                        "indexExpression": {
                          "id": 358,
                          "name": "_scheduleID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 341,
                          "src": "3570:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3553:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_schedule_$25_storage",
                          "typeString": "struct freelancer.schedule storage ref"
                        }
                      },
                      "id": 360,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "scheduleState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24,
                      "src": "3553:43:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ScheduleState_$7",
                        "typeString": "enum freelancer.ScheduleState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 361,
                        "name": "ScheduleState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "3599:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_ScheduleState_$7_$",
                          "typeString": "type(enum freelancer.ScheduleState)"
                        }
                      },
                      "id": 362,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "started",
                      "nodeType": "MemberAccess",
                      "src": "3599:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ScheduleState_$7",
                        "typeString": "enum freelancer.ScheduleState"
                      }
                    },
                    "src": "3553:67:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ScheduleState_$7",
                      "typeString": "enum freelancer.ScheduleState"
                    }
                  },
                  "id": 364,
                  "nodeType": "ExpressionStatement",
                  "src": "3553:67:0"
                },
                {
                  "expression": {
                    "id": 370,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 365,
                          "name": "scheduleRegister",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44,
                          "src": "3631:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_int256_$_t_struct$_schedule_$25_storage_$",
                            "typeString": "mapping(int256 => struct freelancer.schedule storage ref)"
                          }
                        },
                        "id": 367,
                        "indexExpression": {
                          "id": 366,
                          "name": "_scheduleID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 341,
                          "src": "3648:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3631:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_schedule_$25_storage",
                          "typeString": "struct freelancer.schedule storage ref"
                        }
                      },
                      "id": 368,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "startDate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19,
                      "src": "3631:39:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 369,
                      "name": "_startDate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 343,
                      "src": "3673:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3631:52:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 371,
                  "nodeType": "ExpressionStatement",
                  "src": "3631:52:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 373,
                        "name": "_scheduleID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 341,
                        "src": "3711:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "id": 372,
                      "name": "taskStarted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 177,
                      "src": "3699:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_int256_$returns$__$",
                        "typeString": "function (int256)"
                      }
                    },
                    "id": 374,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3699:24:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 375,
                  "nodeType": "EmitStatement",
                  "src": "3694:29:0"
                }
              ]
            },
            "functionSelector": "4570078f",
            "id": 377,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 346,
                      "name": "ProjectState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "3430:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_ProjectState_$11_$",
                        "typeString": "type(enum freelancer.ProjectState)"
                      }
                    },
                    "id": 347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "accepted",
                    "nodeType": "MemberAccess",
                    "src": "3430:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ProjectState_$11",
                      "typeString": "enum freelancer.ProjectState"
                    }
                  }
                ],
                "id": 348,
                "modifierName": {
                  "id": 345,
                  "name": "inProjectState",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 105,
                  "src": "3415:14:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "3415:37:0"
              },
              {
                "arguments": [
                  {
                    "id": 350,
                    "name": "_scheduleID",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 341,
                    "src": "3478:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  {
                    "expression": {
                      "id": 351,
                      "name": "ScheduleState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7,
                      "src": "3491:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_ScheduleState_$7_$",
                        "typeString": "type(enum freelancer.ScheduleState)"
                      }
                    },
                    "id": 352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "funded",
                    "nodeType": "MemberAccess",
                    "src": "3491:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ScheduleState_$7",
                      "typeString": "enum freelancer.ScheduleState"
                    }
                  }
                ],
                "id": 353,
                "modifierName": {
                  "id": 349,
                  "name": "inScheduleState",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 130,
                  "src": "3462:15:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "3462:50:0"
              },
              {
                "id": 355,
                "modifierName": {
                  "id": 354,
                  "name": "onlyFreelancer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 65,
                  "src": "3522:14:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "3522:14:0"
              }
            ],
            "name": "startTask",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 344,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 341,
                  "mutability": "mutable",
                  "name": "_scheduleID",
                  "nodeType": "VariableDeclaration",
                  "scope": 377,
                  "src": "3350:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 340,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3350:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 343,
                  "mutability": "mutable",
                  "name": "_startDate",
                  "nodeType": "VariableDeclaration",
                  "scope": 377,
                  "src": "3370:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 342,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3370:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3349:40:0"
            },
            "returnParameters": {
              "id": 356,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3542:0:0"
            },
            "scope": 492,
            "src": "3331:400:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 414,
              "nodeType": "Block",
              "src": "3947:187:0",
              "statements": [
                {
                  "expression": {
                    "id": 401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 395,
                          "name": "scheduleRegister",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44,
                          "src": "3958:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_int256_$_t_struct$_schedule_$25_storage_$",
                            "typeString": "mapping(int256 => struct freelancer.schedule storage ref)"
                          }
                        },
                        "id": 397,
                        "indexExpression": {
                          "id": 396,
                          "name": "_scheduleID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 379,
                          "src": "3975:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3958:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_schedule_$25_storage",
                          "typeString": "struct freelancer.schedule storage ref"
                        }
                      },
                      "id": 398,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "scheduleState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24,
                      "src": "3958:43:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ScheduleState_$7",
                        "typeString": "enum freelancer.ScheduleState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 399,
                        "name": "ScheduleState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "4004:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_ScheduleState_$7_$",
                          "typeString": "type(enum freelancer.ScheduleState)"
                        }
                      },
                      "id": 400,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "approved",
                      "nodeType": "MemberAccess",
                      "src": "4004:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ScheduleState_$7",
                        "typeString": "enum freelancer.ScheduleState"
                      }
                    },
                    "src": "3958:68:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ScheduleState_$7",
                      "typeString": "enum freelancer.ScheduleState"
                    }
                  },
                  "id": 402,
                  "nodeType": "ExpressionStatement",
                  "src": "3958:68:0"
                },
                {
                  "expression": {
                    "id": 408,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 403,
                          "name": "scheduleRegister",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44,
                          "src": "4037:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_int256_$_t_struct$_schedule_$25_storage_$",
                            "typeString": "mapping(int256 => struct freelancer.schedule storage ref)"
                          }
                        },
                        "id": 405,
                        "indexExpression": {
                          "id": 404,
                          "name": "_scheduleID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 379,
                          "src": "4054:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4037:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_schedule_$25_storage",
                          "typeString": "struct freelancer.schedule storage ref"
                        }
                      },
                      "id": 406,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "endDate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21,
                      "src": "4037:37:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 407,
                      "name": "_endDate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 381,
                      "src": "4077:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4037:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 409,
                  "nodeType": "ExpressionStatement",
                  "src": "4037:48:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 411,
                        "name": "_scheduleID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 379,
                        "src": "4114:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "id": 410,
                      "name": "taskApproved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 181,
                      "src": "4101:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_int256_$returns$__$",
                        "typeString": "function (int256)"
                      }
                    },
                    "id": 412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4101:25:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 413,
                  "nodeType": "EmitStatement",
                  "src": "4096:30:0"
                }
              ]
            },
            "functionSelector": "b92586c2",
            "id": 415,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 384,
                      "name": "ProjectState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "3838:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_ProjectState_$11_$",
                        "typeString": "type(enum freelancer.ProjectState)"
                      }
                    },
                    "id": 385,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "accepted",
                    "nodeType": "MemberAccess",
                    "src": "3838:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ProjectState_$11",
                      "typeString": "enum freelancer.ProjectState"
                    }
                  }
                ],
                "id": 386,
                "modifierName": {
                  "id": 383,
                  "name": "inProjectState",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 105,
                  "src": "3823:14:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "3823:37:0"
              },
              {
                "arguments": [
                  {
                    "id": 388,
                    "name": "_scheduleID",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 379,
                    "src": "3886:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  {
                    "expression": {
                      "id": 389,
                      "name": "ScheduleState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7,
                      "src": "3899:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_ScheduleState_$7_$",
                        "typeString": "type(enum freelancer.ScheduleState)"
                      }
                    },
                    "id": 390,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "started",
                    "nodeType": "MemberAccess",
                    "src": "3899:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ScheduleState_$7",
                      "typeString": "enum freelancer.ScheduleState"
                    }
                  }
                ],
                "id": 391,
                "modifierName": {
                  "id": 387,
                  "name": "inScheduleState",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 130,
                  "src": "3870:15:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "3870:51:0"
              },
              {
                "id": 393,
                "modifierName": {
                  "id": 392,
                  "name": "onlyClient",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 76,
                  "src": "3931:10:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "3931:10:0"
              }
            ],
            "name": "approveTask",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 382,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 379,
                  "mutability": "mutable",
                  "name": "_scheduleID",
                  "nodeType": "VariableDeclaration",
                  "scope": 415,
                  "src": "3760:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 378,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3760:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 381,
                  "mutability": "mutable",
                  "name": "_endDate",
                  "nodeType": "VariableDeclaration",
                  "scope": 415,
                  "src": "3780:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 380,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3780:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3759:38:0"
            },
            "returnParameters": {
              "id": 394,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3947:0:0"
            },
            "scope": 492,
            "src": "3739:395:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 456,
              "nodeType": "Block",
              "src": "4359:240:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 434,
                            "name": "scheduleRegister",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44,
                            "src": "4397:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_int256_$_t_struct$_schedule_$25_storage_$",
                              "typeString": "mapping(int256 => struct freelancer.schedule storage ref)"
                            }
                          },
                          "id": 436,
                          "indexExpression": {
                            "id": 435,
                            "name": "_scheduleID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 417,
                            "src": "4414:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4397:29:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_schedule_$25_storage",
                            "typeString": "struct freelancer.schedule storage ref"
                          }
                        },
                        "id": 437,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 17,
                        "src": "4397:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 431,
                        "name": "freelancerAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30,
                        "src": "4370:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 433,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "4370:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 438,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4370:63:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 439,
                  "nodeType": "ExpressionStatement",
                  "src": "4370:63:0"
                },
                {
                  "expression": {
                    "id": 446,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 440,
                          "name": "scheduleRegister",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44,
                          "src": "4444:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_int256_$_t_struct$_schedule_$25_storage_$",
                            "typeString": "mapping(int256 => struct freelancer.schedule storage ref)"
                          }
                        },
                        "id": 442,
                        "indexExpression": {
                          "id": 441,
                          "name": "_scheduleID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 417,
                          "src": "4461:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4444:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_schedule_$25_storage",
                          "typeString": "struct freelancer.schedule storage ref"
                        }
                      },
                      "id": 443,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "scheduleState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24,
                      "src": "4444:43:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ScheduleState_$7",
                        "typeString": "enum freelancer.ScheduleState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 444,
                        "name": "ScheduleState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "4490:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_ScheduleState_$7_$",
                          "typeString": "type(enum freelancer.ScheduleState)"
                        }
                      },
                      "id": 445,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "released",
                      "nodeType": "MemberAccess",
                      "src": "4490:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ScheduleState_$7",
                        "typeString": "enum freelancer.ScheduleState"
                      }
                    },
                    "src": "4444:68:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ScheduleState_$7",
                      "typeString": "enum freelancer.ScheduleState"
                    }
                  },
                  "id": 447,
                  "nodeType": "ExpressionStatement",
                  "src": "4444:68:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 449,
                        "name": "_scheduleID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 417,
                        "src": "4542:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 450,
                            "name": "scheduleRegister",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44,
                            "src": "4555:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_int256_$_t_struct$_schedule_$25_storage_$",
                              "typeString": "mapping(int256 => struct freelancer.schedule storage ref)"
                            }
                          },
                          "id": 452,
                          "indexExpression": {
                            "id": 451,
                            "name": "_scheduleID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 417,
                            "src": "4572:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4555:29:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_schedule_$25_storage",
                            "typeString": "struct freelancer.schedule storage ref"
                          }
                        },
                        "id": 453,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 17,
                        "src": "4555:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 448,
                      "name": "fundsReleased",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 187,
                      "src": "4528:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_int256_$_t_uint256_$returns$__$",
                        "typeString": "function (int256,uint256)"
                      }
                    },
                    "id": 454,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4528:63:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 455,
                  "nodeType": "EmitStatement",
                  "src": "4523:68:0"
                }
              ]
            },
            "functionSelector": "bb6fc950",
            "id": 457,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 420,
                      "name": "ProjectState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "4245:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_ProjectState_$11_$",
                        "typeString": "type(enum freelancer.ProjectState)"
                      }
                    },
                    "id": 421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "accepted",
                    "nodeType": "MemberAccess",
                    "src": "4245:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ProjectState_$11",
                      "typeString": "enum freelancer.ProjectState"
                    }
                  }
                ],
                "id": 422,
                "modifierName": {
                  "id": 419,
                  "name": "inProjectState",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 105,
                  "src": "4230:14:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "4230:37:0"
              },
              {
                "arguments": [
                  {
                    "id": 424,
                    "name": "_scheduleID",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 417,
                    "src": "4293:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  {
                    "expression": {
                      "id": 425,
                      "name": "ScheduleState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7,
                      "src": "4306:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_ScheduleState_$7_$",
                        "typeString": "type(enum freelancer.ScheduleState)"
                      }
                    },
                    "id": 426,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "approved",
                    "nodeType": "MemberAccess",
                    "src": "4306:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ScheduleState_$7",
                      "typeString": "enum freelancer.ScheduleState"
                    }
                  }
                ],
                "id": 427,
                "modifierName": {
                  "id": 423,
                  "name": "inScheduleState",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 130,
                  "src": "4277:15:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "4277:52:0"
              },
              {
                "id": 429,
                "modifierName": {
                  "id": 428,
                  "name": "onlyFreelancer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 65,
                  "src": "4339:14:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "4339:14:0"
              }
            ],
            "name": "releaseFunds",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 418,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 417,
                  "mutability": "mutable",
                  "name": "_scheduleID",
                  "nodeType": "VariableDeclaration",
                  "scope": 457,
                  "src": "4168:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 416,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4168:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4167:20:0"
            },
            "returnParameters": {
              "id": 430,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4359:0:0"
            },
            "scope": 492,
            "src": "4146:453:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 478,
              "nodeType": "Block",
              "src": "4721:112:0",
              "statements": [
                {
                  "expression": {
                    "id": 469,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 466,
                      "name": "projectState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "4732:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ProjectState_$11",
                        "typeString": "enum freelancer.ProjectState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 467,
                        "name": "ProjectState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "4747:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_ProjectState_$11_$",
                          "typeString": "type(enum freelancer.ProjectState)"
                        }
                      },
                      "id": 468,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "closed",
                      "nodeType": "MemberAccess",
                      "src": "4747:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ProjectState_$11",
                        "typeString": "enum freelancer.ProjectState"
                      }
                    },
                    "src": "4732:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ProjectState_$11",
                      "typeString": "enum freelancer.ProjectState"
                    }
                  },
                  "id": 470,
                  "nodeType": "ExpressionStatement",
                  "src": "4732:34:0"
                },
                {
                  "expression": {
                    "id": 473,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 471,
                      "name": "endDate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39,
                      "src": "4777:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 472,
                      "name": "_endDate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 459,
                      "src": "4787:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4777:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 474,
                  "nodeType": "ExpressionStatement",
                  "src": "4777:18:0"
                },
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 475,
                      "name": "projectEnded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 189,
                      "src": "4811:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 476,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4811:14:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 477,
                  "nodeType": "EmitStatement",
                  "src": "4806:19:0"
                }
              ]
            },
            "functionSelector": "744bc369",
            "id": 479,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 462,
                "modifierName": {
                  "id": 461,
                  "name": "bothClientFreelancer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 92,
                  "src": "4674:20:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "4674:20:0"
              },
              {
                "id": 464,
                "modifierName": {
                  "id": 463,
                  "name": "noMoreFunds",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 161,
                  "src": "4704:11:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "4704:11:0"
              }
            ],
            "name": "endProject",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 460,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 459,
                  "mutability": "mutable",
                  "name": "_endDate",
                  "nodeType": "VariableDeclaration",
                  "scope": 479,
                  "src": "4631:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 458,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4631:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4630:18:0"
            },
            "returnParameters": {
              "id": 465,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4721:0:0"
            },
            "scope": 492,
            "src": "4611:222:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 490,
              "nodeType": "Block",
              "src": "4937:47:0",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 486,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967268,
                          "src": "4963:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_freelancer_$492",
                            "typeString": "contract freelancer"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_freelancer_$492",
                            "typeString": "contract freelancer"
                          }
                        ],
                        "id": 485,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4955:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 484,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4955:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 487,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4955:13:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 488,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "4955:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 483,
                  "id": 489,
                  "nodeType": "Return",
                  "src": "4948:28:0"
                }
              ]
            },
            "functionSelector": "12065fe0",
            "id": 491,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 480,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4864:2:0"
            },
            "returnParameters": {
              "id": 483,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 482,
                  "mutability": "mutable",
                  "name": "balance",
                  "nodeType": "VariableDeclaration",
                  "scope": 491,
                  "src": "4915:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 481,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4915:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4914:17:0"
            },
            "scope": 492,
            "src": "4845:139:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 493,
        "src": "62:4925:0"
      }
    ],
    "src": "35:4953:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {
    "1648106243163": {
      "events": {
        "0xd73e163332c47993ba97b46887362ea1f01120cbc609242b41762901217bfd5d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "int256",
              "name": "scheduleID",
              "type": "int256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "valueReleased",
              "type": "uint256"
            }
          ],
          "name": "fundsReleased",
          "type": "event"
        },
        "0x01bc39c23d192137df337abb0c6fe3f63a86ead52f73452ca64136a5dfd7ff43": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "clientAddress",
              "type": "address"
            }
          ],
          "name": "projectAccepted",
          "type": "event"
        },
        "0xbef1ef6470add1875c12e547d844894de0608f7d47527676863b44153090bfe2": {
          "anonymous": false,
          "inputs": [],
          "name": "projectEnded",
          "type": "event"
        },
        "0xf29fdea51f7ec4cf45bbb7eb61e67fa64cf90101b5ea7415c5b02b69bac9c594": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "string",
              "name": "shortCode",
              "type": "string"
            }
          ],
          "name": "scheduleAdded",
          "type": "event"
        },
        "0x38f72d6c98702d265aec82b55e4b637d84fa97622b2244cd84dca2f171a0cefc": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "int256",
              "name": "scheduleID",
              "type": "int256"
            }
          ],
          "name": "taskApproved",
          "type": "event"
        },
        "0xd58e7b4972479e30bd65e34280dcda90802a617a803cb4b39764a2a30d3a8eae": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "int256",
              "name": "scheduleID",
              "type": "int256"
            }
          ],
          "name": "taskFunded",
          "type": "event"
        },
        "0xde2dc33fbe2a5b6bf5e0ed721d44dc14441c4eef2cf4975ce14fd7bc0549489c": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "int256",
              "name": "scheduleID",
              "type": "int256"
            }
          ],
          "name": "taskStarted",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x33E0b5C9Cc7Fca6ae951b05E80771e943a07B185",
      "transactionHash": "0x54b62469ac46bdb8caf516321269cd35a625d86963a1561052edcc93a6171ac1"
    },
    "1648110355045": {
      "events": {
        "0xd73e163332c47993ba97b46887362ea1f01120cbc609242b41762901217bfd5d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "int256",
              "name": "scheduleID",
              "type": "int256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "valueReleased",
              "type": "uint256"
            }
          ],
          "name": "fundsReleased",
          "type": "event"
        },
        "0x01bc39c23d192137df337abb0c6fe3f63a86ead52f73452ca64136a5dfd7ff43": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "clientAddress",
              "type": "address"
            }
          ],
          "name": "projectAccepted",
          "type": "event"
        },
        "0xbef1ef6470add1875c12e547d844894de0608f7d47527676863b44153090bfe2": {
          "anonymous": false,
          "inputs": [],
          "name": "projectEnded",
          "type": "event"
        },
        "0xf29fdea51f7ec4cf45bbb7eb61e67fa64cf90101b5ea7415c5b02b69bac9c594": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "string",
              "name": "shortCode",
              "type": "string"
            }
          ],
          "name": "scheduleAdded",
          "type": "event"
        },
        "0x38f72d6c98702d265aec82b55e4b637d84fa97622b2244cd84dca2f171a0cefc": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "int256",
              "name": "scheduleID",
              "type": "int256"
            }
          ],
          "name": "taskApproved",
          "type": "event"
        },
        "0xd58e7b4972479e30bd65e34280dcda90802a617a803cb4b39764a2a30d3a8eae": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "int256",
              "name": "scheduleID",
              "type": "int256"
            }
          ],
          "name": "taskFunded",
          "type": "event"
        },
        "0xde2dc33fbe2a5b6bf5e0ed721d44dc14441c4eef2cf4975ce14fd7bc0549489c": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "int256",
              "name": "scheduleID",
              "type": "int256"
            }
          ],
          "name": "taskStarted",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xe933001E259f409932B1D301df81FE8453C52abD",
      "transactionHash": "0xf1402e2867f69735ccfbabffa2fb4652cf2ea609a913e05e62c0d6e213ff83cf"
    }
  },
  "schemaVersion": "3.4.6",
  "updatedAt": "2022-03-24T10:15:11.086Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}